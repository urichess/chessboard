/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/elotro/work/sparring-urichess/arduino_r4_wifi/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /memory0@20000000
 *   5   /clocks
 *   6   /clocks/loco
 *   7   /clocks/moco
 *   8   /clocks/mosc
 *   9   /clocks/pll
 *   10  /clocks/sosc
 *   11  /cpus
 *   12  /cpus/cpu@0
 *   13  /soc
 *   14  /soc/interrupt-controller@40006000
 *   15  /soc/gpio@40040020
 *   16  /leds
 *   17  /leds/led
 *   18  /soc/gpio@40040000
 *   19  /soc/gpio@40040040
 *   20  /soc/gpio@40040060
 *   21  /soc/gpio@40040080
 *   22  /soc/gpio@400400a0
 *   23  /soc/gpio@400400c0
 *   24  /soc/gpio@400400e0
 *   25  /soc/gpio@40040100
 *   26  /soc/gpio@40040120
 *   27  /soc/interrupt-controller@e000e100
 *   28  /soc/timer@e000e010
 *   29  /soc/flash-controller@4001c000
 *   30  /soc/flash-controller@4001c000/flash1@40100000
 *   31  /soc/flash-controller@4001c000/flash0@0
 *   32  /soc/flash-controller@4001c000/flash0@0/partitions
 *   33  /soc/flash-controller@4001c000/flash0@0/partitions/partition@0
 *   34  /soc/flash-controller@4001c000/flash0@0/partitions/partition@4000
 *   35  /soc/pinctrl@40040800
 *   36  /soc/pinctrl@40040800/sci2_default
 *   37  /soc/pinctrl@40040800/sci2_default/group1
 *   38  /clocks/hoco
 *   39  /soc/cgc@4001e000
 *   40  /soc/sci@40070000
 *   41  /soc/sci@40070000/uart
 *   42  /soc/sci@40070020
 *   43  /soc/sci@40070020/uart
 *   44  /soc/sci@40070040
 *   45  /soc/sci@40070040/uart
 *   46  /soc/sci@40070120
 *   47  /soc/sci@40070120/uart
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 8
#define DT_N_CHILD_NUM_STATUS_OKAY 8
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_memory0_20000000) fn(DT_N_S_leds) fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_memory0_20000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_memory0_20000000) fn(DT_N_S_leds) fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_memory0_20000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /memory0@20000000 */ \
	5, /* /clocks */ \
	11, /* /cpus */ \
	13, /* /soc */ \
	16, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_renesas_r7fa4m1ab3cfm DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_renesas_r7fa4m1ab3cfm 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "r7fa4m1ab3cfm"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"renesas,r7fa4m1ab3cfm"}
#define DT_N_P_compatible_IDX_0 "renesas,r7fa4m1ab3cfm"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED renesas,r7fa4m1ab3cfm
#define DT_N_P_compatible_IDX_0_STRING_TOKEN renesas_r7fa4m1ab3cfm
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_R7FA4M1AB3CFM
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE/dts/bindings/gpio/arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_connector_NODELABEL_NUM 1
#define DT_N_S_connector_FOREACH_NODELABEL(fn) fn(arduino_header)
#define DT_N_S_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(arduino_header, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_CHILD_NUM 0
#define DT_N_S_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_IRQ_LEVEL 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-header-r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_HEADER_R3
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_zephyr_deferred_init 0
#define DT_N_S_connector_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /memory0@20000000
 *
 * Node identifier: DT_N_S_memory0_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory0_20000000_PATH "/memory0@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory0_20000000_FULL_NAME "memory0@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory0_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory0_20000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_memory0_20000000_NODELABEL_NUM 1
#define DT_N_S_memory0_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory0_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory0_20000000_CHILD_NUM 0
#define DT_N_S_memory0_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory0_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory0_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory0_20000000_ORD 4
#define DT_N_S_memory0_20000000_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory0_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory0_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory0_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory0_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory0_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory0_20000000_REG_NUM 1
#define DT_N_S_memory0_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory0_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory0_20000000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory0_20000000_RANGES_NUM 0
#define DT_N_S_memory0_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory0_20000000_IRQ_NUM 0
#define DT_N_S_memory0_20000000_IRQ_LEVEL 0
#define DT_N_S_memory0_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory0_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory0_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory0_20000000_P_wakeup_source 0
#define DT_N_S_memory0_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory0_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory0_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_memory0_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory0_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory0_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory0_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory0_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory0_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory0_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory0_20000000, compatible, 0)
#define DT_N_S_memory0_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory0_20000000, compatible, 0)
#define DT_N_S_memory0_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory0_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory0_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory0_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory0_20000000_P_compatible_LEN 1
#define DT_N_S_memory0_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory0_20000000_P_reg {536870912 /* 0x20000000 */, 32768 /* 0x8000 */}
#define DT_N_S_memory0_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory0_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory0_20000000_P_reg_IDX_1 32768
#define DT_N_S_memory0_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory0_20000000_P_reg_EXISTS 1
#define DT_N_S_memory0_20000000_P_zephyr_deferred_init 0
#define DT_N_S_memory0_20000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 6
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_mosc) fn(DT_N_S_clocks_S_sosc) fn(DT_N_S_clocks_S_hoco) fn(DT_N_S_clocks_S_moco) fn(DT_N_S_clocks_S_loco) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_mosc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sosc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hoco) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_moco) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_loco) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_mosc, __VA_ARGS__) fn(DT_N_S_clocks_S_sosc, __VA_ARGS__) fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) fn(DT_N_S_clocks_S_moco, __VA_ARGS__) fn(DT_N_S_clocks_S_loco, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_mosc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sosc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_moco, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_loco, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_hoco) fn(DT_N_S_clocks_S_moco) fn(DT_N_S_clocks_S_loco)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_hoco) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_moco) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_loco)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) fn(DT_N_S_clocks_S_moco, __VA_ARGS__) fn(DT_N_S_clocks_S_loco, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_moco, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_loco, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 5
#define DT_N_S_clocks_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	6, /* /clocks/loco */ \
	7, /* /clocks/moco */ \
	8, /* /clocks/mosc */ \
	9, /* /clocks/pll */ \
	10, /* /clocks/sosc */ \
	38, /* /clocks/hoco */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/loco
 *
 * Node identifier: DT_N_S_clocks_S_loco
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_loco_PATH "/clocks/loco"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_loco_FULL_NAME "loco"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_loco_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_loco_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_loco_NODELABEL_NUM 1
#define DT_N_S_clocks_S_loco_FOREACH_NODELABEL(fn) fn(loco)
#define DT_N_S_clocks_S_loco_FOREACH_NODELABEL_VARGS(fn, ...) fn(loco, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_loco_CHILD_NUM 0
#define DT_N_S_clocks_S_loco_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_loco_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_loco_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_loco_ORD 6
#define DT_N_S_clocks_S_loco_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_loco_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_loco_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_loco_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_loco
#define DT_N_NODELABEL_loco     DT_N_S_clocks_S_loco

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_loco_REG_NUM 0
#define DT_N_S_clocks_S_loco_RANGES_NUM 0
#define DT_N_S_clocks_S_loco_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_loco_IRQ_NUM 0
#define DT_N_S_clocks_S_loco_IRQ_LEVEL 0
#define DT_N_S_clocks_S_loco_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_loco_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_loco_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_loco_P_wakeup_source 0
#define DT_N_S_clocks_S_loco_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_loco_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_loco_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_loco_P_status "okay"
#define DT_N_S_clocks_S_loco_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_loco_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_loco_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_loco_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_loco_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_loco_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_loco_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_loco_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_loco_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_loco_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_loco, status, 0)
#define DT_N_S_clocks_S_loco_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_loco, status, 0)
#define DT_N_S_clocks_S_loco_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_loco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_loco_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_loco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_loco_P_status_LEN 1
#define DT_N_S_clocks_S_loco_P_status_EXISTS 1
#define DT_N_S_clocks_S_loco_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_loco_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_loco_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_loco_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_loco_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_loco_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_loco_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_loco, compatible, 0)
#define DT_N_S_clocks_S_loco_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_loco, compatible, 0)
#define DT_N_S_clocks_S_loco_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_loco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_loco_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_loco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_loco_P_compatible_LEN 1
#define DT_N_S_clocks_S_loco_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_loco_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_loco_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_loco_P_clock_frequency 32768
#define DT_N_S_clocks_S_loco_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/moco
 *
 * Node identifier: DT_N_S_clocks_S_moco
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_moco_PATH "/clocks/moco"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_moco_FULL_NAME "moco"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_moco_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_moco_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_moco_NODELABEL_NUM 1
#define DT_N_S_clocks_S_moco_FOREACH_NODELABEL(fn) fn(moco)
#define DT_N_S_clocks_S_moco_FOREACH_NODELABEL_VARGS(fn, ...) fn(moco, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_moco_CHILD_NUM 0
#define DT_N_S_clocks_S_moco_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_moco_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_moco_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_moco_ORD 7
#define DT_N_S_clocks_S_moco_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_moco_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_moco_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_moco_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_moco
#define DT_N_NODELABEL_moco     DT_N_S_clocks_S_moco

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_moco_REG_NUM 0
#define DT_N_S_clocks_S_moco_RANGES_NUM 0
#define DT_N_S_clocks_S_moco_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_moco_IRQ_NUM 0
#define DT_N_S_clocks_S_moco_IRQ_LEVEL 0
#define DT_N_S_clocks_S_moco_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_moco_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_moco_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_moco_P_wakeup_source 0
#define DT_N_S_clocks_S_moco_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_moco_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_moco_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_moco_P_status "okay"
#define DT_N_S_clocks_S_moco_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_moco_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_moco_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_moco_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_moco_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_moco_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_moco_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_moco_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_moco_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_moco_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_moco, status, 0)
#define DT_N_S_clocks_S_moco_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_moco, status, 0)
#define DT_N_S_clocks_S_moco_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_moco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_moco_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_moco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_moco_P_status_LEN 1
#define DT_N_S_clocks_S_moco_P_status_EXISTS 1
#define DT_N_S_clocks_S_moco_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_moco_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_moco_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_moco_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_moco_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_moco_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_moco_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_moco, compatible, 0)
#define DT_N_S_clocks_S_moco_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_moco, compatible, 0)
#define DT_N_S_clocks_S_moco_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_moco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_moco_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_moco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_moco_P_compatible_LEN 1
#define DT_N_S_clocks_S_moco_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_moco_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_moco_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_moco_P_clock_frequency 8000000
#define DT_N_S_clocks_S_moco_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/mosc
 *
 * Node identifier: DT_N_S_clocks_S_mosc
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_mosc_PATH "/clocks/mosc"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_mosc_FULL_NAME "mosc"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_mosc_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_mosc_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_mosc_NODELABEL_NUM 1
#define DT_N_S_clocks_S_mosc_FOREACH_NODELABEL(fn) fn(mosc)
#define DT_N_S_clocks_S_mosc_FOREACH_NODELABEL_VARGS(fn, ...) fn(mosc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_mosc_CHILD_NUM 0
#define DT_N_S_clocks_S_mosc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_mosc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_mosc_ORD 8
#define DT_N_S_clocks_S_mosc_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_mosc_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_mosc_SUPPORTS_ORDS \
	9, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_mosc_EXISTS 1
#define DT_N_INST_3_fixed_clock DT_N_S_clocks_S_mosc
#define DT_N_NODELABEL_mosc     DT_N_S_clocks_S_mosc

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_mosc_REG_NUM 0
#define DT_N_S_clocks_S_mosc_RANGES_NUM 0
#define DT_N_S_clocks_S_mosc_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_mosc_IRQ_NUM 0
#define DT_N_S_clocks_S_mosc_IRQ_LEVEL 0
#define DT_N_S_clocks_S_mosc_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_mosc_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_mosc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_mosc_P_wakeup_source 0
#define DT_N_S_clocks_S_mosc_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_mosc_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_status "disabled"
#define DT_N_S_clocks_S_mosc_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_mosc_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_mosc_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_mosc_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_mosc_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_mosc_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_mosc_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_mosc_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_mosc, status, 0)
#define DT_N_S_clocks_S_mosc_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_mosc, status, 0)
#define DT_N_S_clocks_S_mosc_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_mosc, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_mosc_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_mosc, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_mosc_P_status_LEN 1
#define DT_N_S_clocks_S_mosc_P_status_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_mosc_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_mosc_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_mosc_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_mosc_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_mosc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_mosc, compatible, 0)
#define DT_N_S_clocks_S_mosc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_mosc, compatible, 0)
#define DT_N_S_clocks_S_mosc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_mosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_mosc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_mosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_mosc_P_compatible_LEN 1
#define DT_N_S_clocks_S_mosc_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_mosc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_mosc_P_clock_frequency 1200000
#define DT_N_S_clocks_S_mosc_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL(fn) fn(pll)
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 9
#define DT_N_S_clocks_S_pll_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	5, /* /clocks */ \
	8, /* /clocks/mosc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_fixed_factor_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll             DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_pll_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clock_div 2
#define DT_N_S_clocks_S_pll_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clock_mult 8
#define DT_N_S_clocks_S_pll_P_clock_mult_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_mosc
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/sosc
 *
 * Node identifier: DT_N_S_clocks_S_sosc
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_sosc_PATH "/clocks/sosc"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_sosc_FULL_NAME "sosc"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_sosc_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_sosc_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_sosc_NODELABEL_NUM 1
#define DT_N_S_clocks_S_sosc_FOREACH_NODELABEL(fn) fn(sosc)
#define DT_N_S_clocks_S_sosc_FOREACH_NODELABEL_VARGS(fn, ...) fn(sosc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_sosc_CHILD_NUM 0
#define DT_N_S_clocks_S_sosc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_sosc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_sosc_ORD 10
#define DT_N_S_clocks_S_sosc_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_sosc_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_sosc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_sosc_EXISTS 1
#define DT_N_INST_4_fixed_clock DT_N_S_clocks_S_sosc
#define DT_N_NODELABEL_sosc     DT_N_S_clocks_S_sosc

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_sosc_REG_NUM 0
#define DT_N_S_clocks_S_sosc_RANGES_NUM 0
#define DT_N_S_clocks_S_sosc_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_sosc_IRQ_NUM 0
#define DT_N_S_clocks_S_sosc_IRQ_LEVEL 0
#define DT_N_S_clocks_S_sosc_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_sosc_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_sosc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_sosc_P_wakeup_source 0
#define DT_N_S_clocks_S_sosc_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_sosc_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_status "disabled"
#define DT_N_S_clocks_S_sosc_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_sosc_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_sosc_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_sosc_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_sosc_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_sosc_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_sosc_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_sosc_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_sosc, status, 0)
#define DT_N_S_clocks_S_sosc_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_sosc, status, 0)
#define DT_N_S_clocks_S_sosc_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_sosc, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sosc_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_sosc, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sosc_P_status_LEN 1
#define DT_N_S_clocks_S_sosc_P_status_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_sosc_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_sosc_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_sosc_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_sosc_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_sosc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_sosc, compatible, 0)
#define DT_N_S_clocks_S_sosc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_sosc, compatible, 0)
#define DT_N_S_clocks_S_sosc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_sosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sosc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_sosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sosc_P_compatible_LEN 1
#define DT_N_S_clocks_S_sosc_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_sosc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_sosc_P_clock_frequency 32768
#define DT_N_S_clocks_S_sosc_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 11
#define DT_N_S_cpus_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	12, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 12
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	11, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4 DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 20
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 8
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_interrupt_controller_40006000) fn(DT_N_S_soc_S_cgc_4001e000) fn(DT_N_S_soc_S_flash_controller_4001c000) fn(DT_N_S_soc_S_gpio_40040000) fn(DT_N_S_soc_S_gpio_40040020) fn(DT_N_S_soc_S_gpio_40040040) fn(DT_N_S_soc_S_gpio_40040060) fn(DT_N_S_soc_S_gpio_40040080) fn(DT_N_S_soc_S_gpio_400400a0) fn(DT_N_S_soc_S_pinctrl_40040800) fn(DT_N_S_soc_S_sci_40070000) fn(DT_N_S_soc_S_sci_40070020) fn(DT_N_S_soc_S_sci_40070120) fn(DT_N_S_soc_S_gpio_400400c0) fn(DT_N_S_soc_S_gpio_400400e0) fn(DT_N_S_soc_S_gpio_40040100) fn(DT_N_S_soc_S_gpio_40040120) fn(DT_N_S_soc_S_sci_40070040)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_cgc_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040020) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040060) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400400a0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40040800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070020) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070120) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400400c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400400e0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040120) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070040)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400400a0, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070020, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070120, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400400c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400400e0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040100, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040120, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040060, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400400a0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070020, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070120, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400400c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400400e0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040120, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_interrupt_controller_40006000) fn(DT_N_S_soc_S_cgc_4001e000) fn(DT_N_S_soc_S_flash_controller_4001c000) fn(DT_N_S_soc_S_gpio_40040020) fn(DT_N_S_soc_S_pinctrl_40040800) fn(DT_N_S_soc_S_sci_40070040)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_cgc_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040020) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40040800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070040)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 13
#define DT_N_S_soc_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	14, /* /soc/interrupt-controller@40006000 */ \
	15, /* /soc/gpio@40040020 */ \
	18, /* /soc/gpio@40040000 */ \
	19, /* /soc/gpio@40040040 */ \
	20, /* /soc/gpio@40040060 */ \
	21, /* /soc/gpio@40040080 */ \
	22, /* /soc/gpio@400400a0 */ \
	23, /* /soc/gpio@400400c0 */ \
	24, /* /soc/gpio@400400e0 */ \
	25, /* /soc/gpio@40040100 */ \
	26, /* /soc/gpio@40040120 */ \
	27, /* /soc/interrupt-controller@e000e100 */ \
	28, /* /soc/timer@e000e010 */ \
	29, /* /soc/flash-controller@4001c000 */ \
	35, /* /soc/pinctrl@40040800 */ \
	39, /* /soc/cgc@4001e000 */ \
	40, /* /soc/sci@40070000 */ \
	42, /* /soc/sci@40070020 */ \
	44, /* /soc/sci@40070040 */ \
	46, /* /soc/sci@40070120 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40006000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40006000
 *
 * Binding (compatible = renesas,ra-interrupt-controller-unit):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/renesas,ra-interrupt-controller-unit.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40006000_PATH "/soc/interrupt-controller@40006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40006000_FULL_NAME "interrupt-controller@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40006000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40006000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_40006000_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_NODELABEL(fn) fn(icu)
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_NODELABEL_VARGS(fn, ...) fn(icu, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_40006000_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40006000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40006000_ORD 14
#define DT_N_S_soc_S_interrupt_controller_40006000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40006000_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40006000_SUPPORTS_ORDS \
	15, /* /soc/gpio@40040020 */ \
	18, /* /soc/gpio@40040000 */ \
	19, /* /soc/gpio@40040040 */ \
	20, /* /soc/gpio@40040060 */ \
	21, /* /soc/gpio@40040080 */ \
	22, /* /soc/gpio@400400a0 */ \
	40, /* /soc/sci@40070000 */ \
	42, /* /soc/sci@40070020 */ \
	44, /* /soc/sci@40070040 */ \
	46, /* /soc/sci@40070120 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40006000_EXISTS 1
#define DT_N_INST_0_renesas_ra_interrupt_controller_unit DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_NODELABEL_icu                               DT_N_S_soc_S_interrupt_controller_40006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_NAME_icu_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_NAME_icu_VAL_ADDRESS DT_N_S_soc_S_interrupt_controller_40006000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_interrupt_controller_40006000_REG_NAME_icu_VAL_SIZE DT_N_S_soc_S_interrupt_controller_40006000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_interrupt_controller_40006000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40006000_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40006000_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_40006000_COMPAT_MATCHES_renesas_ra_interrupt_controller_unit 1
#define DT_N_S_soc_S_interrupt_controller_40006000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_interrupt_controller_40006000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_COMPAT_MODEL_IDX_0 "ra-interrupt-controller-unit"
#define DT_N_S_soc_S_interrupt_controller_40006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40006000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40006000_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40006000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_40006000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible {"renesas,ra-interrupt-controller-unit"}
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_IDX_0 "renesas,ra-interrupt-controller-unit"
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-interrupt-controller-unit
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_IDX_0_STRING_TOKEN renesas_ra_interrupt_controller_unit
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_INTERRUPT_CONTROLLER_UNIT
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40006000, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40006000, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg {1073766400 /* 0x40006000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_IDX_1 64
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names {"icu"}
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_IDX_0 "icu"
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_IDX_0_STRING_UNQUOTED icu
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_IDX_0_STRING_TOKEN icu
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_IDX_0_STRING_UPPER_TOKEN ICU
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40006000, reg_names, 0)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40006000, reg_names, 0)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40006000, reg_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40006000, reg_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40006000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_40006000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040020
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040020
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040020_PATH "/soc/gpio@40040020"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040020_FULL_NAME "gpio@40040020"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040020_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040020_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040020_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040020_FOREACH_NODELABEL(fn) fn(ioport1)
#define DT_N_S_soc_S_gpio_40040020_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040020_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040020_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040020_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040020_ORD 15
#define DT_N_S_soc_S_gpio_40040020_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040020_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040020_SUPPORTS_ORDS \
	16, /* /leds */ \
	17, /* /leds/led */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040020_EXISTS 1
#define DT_N_INST_0_renesas_ra_gpio DT_N_S_soc_S_gpio_40040020
#define DT_N_NODELABEL_ioport1      DT_N_S_soc_S_gpio_40040020

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040020_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040020_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_REG_IDX_0_VAL_ADDRESS 1074004000 /* 0x40040020 */
#define DT_N_S_soc_S_gpio_40040020_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040020_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040020_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040020_IRQ_NUM 5
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_flags 256
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_flags 512
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_flags 768
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_flags 1024
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_flags 1280
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040020_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_VAL_irq DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_VAL_priority DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_VAL_flags DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq0_CONTROLLER DT_N_S_soc_S_gpio_40040020_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_VAL_irq DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_VAL_priority DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_VAL_flags DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq1_CONTROLLER DT_N_S_soc_S_gpio_40040020_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_VAL_irq DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_VAL_priority DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_VAL_flags DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq2_CONTROLLER DT_N_S_soc_S_gpio_40040020_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_VAL_irq DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_VAL_priority DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_VAL_flags DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq3_CONTROLLER DT_N_S_soc_S_gpio_40040020_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_VAL_irq DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_VAL_priority DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_VAL_flags DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_IRQ_NAME_port_irq4_CONTROLLER DT_N_S_soc_S_gpio_40040020_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_gpio_40040020_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040020_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040020_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040020_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040020_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040020_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040020_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040020_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040020_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040020_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_status "okay"
#define DT_N_S_soc_S_gpio_40040020_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_40040020_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_40040020_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_40040020_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_40040020_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_40040020_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_40040020_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_40040020_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, status, 0)
#define DT_N_S_soc_S_gpio_40040020_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, status, 0)
#define DT_N_S_soc_S_gpio_40040020_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040020_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040020_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040020_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040020_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040020_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, compatible, 0)
#define DT_N_S_soc_S_gpio_40040020_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, compatible, 0)
#define DT_N_S_soc_S_gpio_40040020_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_reg {1074004000 /* 0x40040020 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040020_P_reg_IDX_0 1074004000
#define DT_N_S_soc_S_gpio_40040020_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040020_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 256 /* 0x100 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 512 /* 0x200 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 768 /* 0x300 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1024 /* 0x400 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1280 /* 0x500 */}
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_2 256
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_5 512
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_8 768
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_11 1024
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_14 1280
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names {"port-irq0", "port-irq1", "port-irq2", "port-irq3", "port-irq4"}
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_0 "port-irq0"
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_0_STRING_UNQUOTED port-irq0
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_0_STRING_TOKEN port_irq0
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PORT_IRQ0
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_1 "port-irq1"
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_1_STRING_UNQUOTED port-irq1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_1_STRING_TOKEN port_irq1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PORT_IRQ1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_2 "port-irq2"
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_2_STRING_UNQUOTED port-irq2
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_2_STRING_TOKEN port_irq2
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN PORT_IRQ2
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_3 "port-irq3"
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_3_STRING_UNQUOTED port-irq3
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_3_STRING_TOKEN port_irq3
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN PORT_IRQ3
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_4 "port-irq4"
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_4_STRING_UNQUOTED port-irq4
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_4_STRING_TOKEN port_irq4
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN PORT_IRQ4
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 1) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 2) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 3) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 4)
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 4)
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040020, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_LEN 5
#define DT_N_S_soc_S_gpio_40040020_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040020_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins {5 /* 0x5 */}
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_IDX_0 5
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, port_irq0_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, port_irq0_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq0_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq0_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq0_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins {1 /* 0x1 */}
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_IDX_0 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, port_irq1_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, port_irq1_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq1_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq1_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq1_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins {0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_IDX_0 0
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, port_irq2_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, port_irq2_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq2_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq2_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq2_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins {10 /* 0xa */}
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_IDX_0 10
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, port_irq3_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, port_irq3_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq3_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq3_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq3_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins {11 /* 0xb */}
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_IDX_0 11
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040020, port_irq4_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040020, port_irq4_pins, 0)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq4_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040020, port_irq4_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040020_P_port_irq4_pins_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 1
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 16
#define DT_N_S_leds_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	15, /* /soc/gpio@40040020 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	17, /* /leds/led */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led
 *
 * Node identifier: DT_N_S_leds_S_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_PATH "/leds/led"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_FULL_NAME "led"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_FOREACH_NODELABEL(fn) fn(led)
#define DT_N_S_leds_S_led_FOREACH_NODELABEL_VARGS(fn, ...) fn(led, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_CHILD_NUM 0
#define DT_N_S_leds_S_led_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_ORD 17
#define DT_N_S_leds_S_led_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_REQUIRES_ORDS \
	15, /* /soc/gpio@40040020 */ \
	16, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_EXISTS 1
#define DT_N_ALIAS_led0    DT_N_S_leds_S_led
#define DT_N_NODELABEL_led DT_N_S_leds_S_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_REG_NUM 0
#define DT_N_S_leds_S_led_RANGES_NUM 0
#define DT_N_S_leds_S_led_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_IRQ_NUM 0
#define DT_N_S_leds_S_led_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40040020
#define DT_N_S_leds_S_led_P_gpios_IDX_0_VAL_pin 2
#define DT_N_S_leds_S_led_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led, gpios, 0)
#define DT_N_S_leds_S_led_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led, gpios, 0)
#define DT_N_S_leds_S_led_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_P_gpios_LEN 1
#define DT_N_S_leds_S_led_P_gpios_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040000
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040000
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040000_PATH "/soc/gpio@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040000_FULL_NAME "gpio@40040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040000_FOREACH_NODELABEL(fn) fn(ioport0)
#define DT_N_S_soc_S_gpio_40040000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040000_ORD 18
#define DT_N_S_soc_S_gpio_40040000_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040000_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040000_EXISTS 1
#define DT_N_INST_1_renesas_ra_gpio DT_N_S_soc_S_gpio_40040000
#define DT_N_NODELABEL_ioport0      DT_N_S_soc_S_gpio_40040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040000_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_gpio_40040000_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040000_IRQ_NUM 6
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_flags 768
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_flags 1024
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_flags 1792
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_flags 2048
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_flags 2816
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_flags 4096
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_VAL_irq DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_VAL_priority DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_VAL_flags DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq2_CONTROLLER DT_N_S_soc_S_gpio_40040000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_VAL_irq DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_VAL_priority DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_VAL_flags DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq3_CONTROLLER DT_N_S_soc_S_gpio_40040000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_VAL_irq DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_VAL_priority DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_VAL_flags DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq6_CONTROLLER DT_N_S_soc_S_gpio_40040000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_VAL_irq DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_VAL_priority DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_VAL_flags DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq7_CONTROLLER DT_N_S_soc_S_gpio_40040000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_VAL_irq DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_VAL_priority DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_VAL_flags DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq10_CONTROLLER DT_N_S_soc_S_gpio_40040000_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_VAL_irq DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_VAL_priority DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_VAL_flags DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_VAL_flags
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_IRQ_NAME_port_irq15_CONTROLLER DT_N_S_soc_S_gpio_40040000_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_gpio_40040000_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_status "disabled"
#define DT_N_S_soc_S_gpio_40040000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_40040000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_40040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_40040000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, status, 0)
#define DT_N_S_soc_S_gpio_40040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, status, 0)
#define DT_N_S_soc_S_gpio_40040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040000_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040000_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040000_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040000_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, compatible, 0)
#define DT_N_S_soc_S_gpio_40040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, compatible, 0)
#define DT_N_S_soc_S_gpio_40040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_reg {1074003968 /* 0x40040000 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_gpio_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 768 /* 0x300 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1024 /* 0x400 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1792 /* 0x700 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2048 /* 0x800 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2816 /* 0xb00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_2 768
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_5 1024
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_8 1792
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_11 2048
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_14 2816
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_15 4294967295
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_16 0
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_17 4096
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names {"port-irq2", "port-irq3", "port-irq6", "port-irq7", "port-irq10", "port-irq15"}
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_0 "port-irq2"
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_0_STRING_UNQUOTED port-irq2
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_0_STRING_TOKEN port_irq2
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PORT_IRQ2
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_1 "port-irq3"
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_1_STRING_UNQUOTED port-irq3
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_1_STRING_TOKEN port_irq3
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PORT_IRQ3
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_2 "port-irq6"
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_2_STRING_UNQUOTED port-irq6
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_2_STRING_TOKEN port_irq6
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN PORT_IRQ6
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_3 "port-irq7"
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_3_STRING_UNQUOTED port-irq7
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_3_STRING_TOKEN port_irq7
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN PORT_IRQ7
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_4 "port-irq10"
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_4_STRING_UNQUOTED port-irq10
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_4_STRING_TOKEN port_irq10
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN PORT_IRQ10
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_5 "port-irq15"
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_5_STRING_UNQUOTED port-irq15
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_5_STRING_TOKEN port_irq15
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN PORT_IRQ15
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 3) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 4) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 5)
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 5)
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 5, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, interrupt_names, 5, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_LEN 6
#define DT_N_S_soc_S_gpio_40040000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins {2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_IDX_0 2
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, port_irq2_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, port_irq2_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq2_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq2_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq2_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins {4 /* 0x4 */}
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_IDX_0 4
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, port_irq3_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, port_irq3_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq3_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq3_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq3_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins {0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_IDX_0 0
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, port_irq6_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, port_irq6_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq6_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq6_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq6_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins {1 /* 0x1 */, 15 /* 0xf */}
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_IDX_0 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_IDX_1 15
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 0) \
	fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 1)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 1)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040000, port_irq7_pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_LEN 2
#define DT_N_S_soc_S_gpio_40040000_P_port_irq7_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins {5 /* 0x5 */}
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_IDX_0 5
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, port_irq10_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, port_irq10_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq10_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq10_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq10_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins {11 /* 0xb */}
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_IDX_0 11
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040000, port_irq15_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040000, port_irq15_pins, 0)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq15_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040000, port_irq15_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040000_P_port_irq15_pins_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040040
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040040
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040040_PATH "/soc/gpio@40040040"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040040_FULL_NAME "gpio@40040040"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040040_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040040_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040040_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040040_FOREACH_NODELABEL(fn) fn(ioport2)
#define DT_N_S_soc_S_gpio_40040040_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040040_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040040_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040040_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040040_ORD 19
#define DT_N_S_soc_S_gpio_40040040_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040040_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040040_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040040_EXISTS 1
#define DT_N_INST_2_renesas_ra_gpio DT_N_S_soc_S_gpio_40040040
#define DT_N_NODELABEL_ioport2      DT_N_S_soc_S_gpio_40040040

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040040_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040040_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_REG_IDX_0_VAL_ADDRESS 1074004032 /* 0x40040040 */
#define DT_N_S_soc_S_gpio_40040040_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040040_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040040_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040040_IRQ_NUM 5
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_flags 256
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_flags 512
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_flags 768
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_flags 1024
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_flags 2560
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040040_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_VAL_irq DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_VAL_priority DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_VAL_flags DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq0_CONTROLLER DT_N_S_soc_S_gpio_40040040_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_VAL_irq DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_VAL_priority DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_VAL_flags DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq1_CONTROLLER DT_N_S_soc_S_gpio_40040040_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_VAL_irq DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_VAL_priority DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_VAL_flags DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq2_CONTROLLER DT_N_S_soc_S_gpio_40040040_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_VAL_irq DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_VAL_priority DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_VAL_flags DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq3_CONTROLLER DT_N_S_soc_S_gpio_40040040_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_VAL_irq DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_VAL_priority DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_VAL_flags DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_IRQ_NAME_port_irq9_CONTROLLER DT_N_S_soc_S_gpio_40040040_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_gpio_40040040_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040040_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040040_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040040_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040040_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040040_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040040_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040040_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040040_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040040_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_status "disabled"
#define DT_N_S_soc_S_gpio_40040040_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_40040040_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040040_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040040_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_40040040_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_40040040_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040040_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040040_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, status, 0)
#define DT_N_S_soc_S_gpio_40040040_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, status, 0)
#define DT_N_S_soc_S_gpio_40040040_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040040_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040040_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040040_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040040_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040040_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040040_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, compatible, 0)
#define DT_N_S_soc_S_gpio_40040040_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, compatible, 0)
#define DT_N_S_soc_S_gpio_40040040_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040040_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_reg {1074004032 /* 0x40040040 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040040_P_reg_IDX_0 1074004032
#define DT_N_S_soc_S_gpio_40040040_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040040_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 256 /* 0x100 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 512 /* 0x200 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 768 /* 0x300 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1024 /* 0x400 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2560 /* 0xa00 */}
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_2 256
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_5 512
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_8 768
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_11 1024
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_14 2560
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names {"port-irq0", "port-irq1", "port-irq2", "port-irq3", "port-irq9"}
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_0 "port-irq0"
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_0_STRING_UNQUOTED port-irq0
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_0_STRING_TOKEN port_irq0
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PORT_IRQ0
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_1 "port-irq1"
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_1_STRING_UNQUOTED port-irq1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_1_STRING_TOKEN port_irq1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PORT_IRQ1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_2 "port-irq2"
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_2_STRING_UNQUOTED port-irq2
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_2_STRING_TOKEN port_irq2
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN PORT_IRQ2
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_3 "port-irq3"
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_3_STRING_UNQUOTED port-irq3
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_3_STRING_TOKEN port_irq3
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN PORT_IRQ3
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_4 "port-irq9"
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_4_STRING_UNQUOTED port-irq9
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_4_STRING_TOKEN port_irq9
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN PORT_IRQ9
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 1) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 2) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 3) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 4)
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 4)
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040040, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_LEN 5
#define DT_N_S_soc_S_gpio_40040040_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040040_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins {6 /* 0x6 */}
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_IDX_0 6
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, port_irq0_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, port_irq0_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq0_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq0_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq0_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins {5 /* 0x5 */}
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_IDX_0 5
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, port_irq1_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, port_irq1_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq1_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq1_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq1_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins {13 /* 0xd */}
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_IDX_0 13
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, port_irq2_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, port_irq2_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq2_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq2_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq2_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins {12 /* 0xc */}
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_IDX_0 12
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040040, port_irq3_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040040, port_irq3_pins, 0)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq3_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040040, port_irq3_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040040_P_port_irq3_pins_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040060
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040060
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040060_PATH "/soc/gpio@40040060"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040060_FULL_NAME "gpio@40040060"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040060_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040060_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040060_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040060_FOREACH_NODELABEL(fn) fn(ioport3)
#define DT_N_S_soc_S_gpio_40040060_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040060_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040060_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040060_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040060_ORD 20
#define DT_N_S_soc_S_gpio_40040060_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040060_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040060_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040060_EXISTS 1
#define DT_N_INST_3_renesas_ra_gpio DT_N_S_soc_S_gpio_40040060
#define DT_N_NODELABEL_ioport3      DT_N_S_soc_S_gpio_40040060

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040060_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040060_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_REG_IDX_0_VAL_ADDRESS 1074004064 /* 0x40040060 */
#define DT_N_S_soc_S_gpio_40040060_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040060_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040060_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040060_IRQ_NUM 4
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_flags 1536
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_flags 1792
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_flags 2304
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_flags 2560
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040060_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_VAL_irq DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_VAL_priority DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_VAL_flags DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq5_CONTROLLER DT_N_S_soc_S_gpio_40040060_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_VAL_irq DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_VAL_priority DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_VAL_flags DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq6_CONTROLLER DT_N_S_soc_S_gpio_40040060_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_VAL_irq DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_VAL_priority DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_VAL_flags DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq8_CONTROLLER DT_N_S_soc_S_gpio_40040060_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_VAL_irq DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_VAL_priority DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_VAL_flags DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_IRQ_NAME_port_irq9_CONTROLLER DT_N_S_soc_S_gpio_40040060_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_gpio_40040060_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040060_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040060_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040060_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040060_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040060_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040060_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040060_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040060_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040060_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_status "disabled"
#define DT_N_S_soc_S_gpio_40040060_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_40040060_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040060_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040060_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_40040060_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_40040060_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040060_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040060_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, status, 0)
#define DT_N_S_soc_S_gpio_40040060_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, status, 0)
#define DT_N_S_soc_S_gpio_40040060_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040060_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040060_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040060_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040060_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040060_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040060_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, compatible, 0)
#define DT_N_S_soc_S_gpio_40040060_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, compatible, 0)
#define DT_N_S_soc_S_gpio_40040060_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040060_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_reg {1074004064 /* 0x40040060 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040060_P_reg_IDX_0 1074004064
#define DT_N_S_soc_S_gpio_40040060_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040060_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1536 /* 0x600 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1792 /* 0x700 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2304 /* 0x900 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2560 /* 0xa00 */}
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_2 1536
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_5 1792
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_8 2304
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_11 2560
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names {"port-irq5", "port-irq6", "port-irq8", "port-irq9"}
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_0 "port-irq5"
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_0_STRING_UNQUOTED port-irq5
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_0_STRING_TOKEN port_irq5
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PORT_IRQ5
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_1 "port-irq6"
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_1_STRING_UNQUOTED port-irq6
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_1_STRING_TOKEN port_irq6
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PORT_IRQ6
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_2 "port-irq8"
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_2_STRING_UNQUOTED port-irq8
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_2_STRING_TOKEN port_irq8
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN PORT_IRQ8
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_3 "port-irq9"
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_3_STRING_UNQUOTED port-irq9
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_3_STRING_TOKEN port_irq9
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN PORT_IRQ9
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 1) \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 2) \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 3)
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 3)
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040060, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_gpio_40040060_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040060_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins {2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_IDX_0 2
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, port_irq5_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, port_irq5_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq5_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq5_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq5_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins {1 /* 0x1 */}
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_IDX_0 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, port_irq6_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, port_irq6_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq6_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq6_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq6_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins {5 /* 0x5 */}
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_IDX_0 5
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, port_irq8_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, port_irq8_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq8_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq8_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq8_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins {4 /* 0x4 */}
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_IDX_0 4
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040060, port_irq9_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040060, port_irq9_pins, 0)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq9_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040060, port_irq9_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040060_P_port_irq9_pins_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040080
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040080
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040080_PATH "/soc/gpio@40040080"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040080_FULL_NAME "gpio@40040080"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040080_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040080_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040080_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040080_FOREACH_NODELABEL(fn) fn(ioport4)
#define DT_N_S_soc_S_gpio_40040080_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040080_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040080_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040080_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040080_ORD 21
#define DT_N_S_soc_S_gpio_40040080_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040080_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040080_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040080_EXISTS 1
#define DT_N_INST_4_renesas_ra_gpio DT_N_S_soc_S_gpio_40040080
#define DT_N_NODELABEL_ioport4      DT_N_S_soc_S_gpio_40040080

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040080_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040080_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_REG_IDX_0_VAL_ADDRESS 1074004096 /* 0x40040080 */
#define DT_N_S_soc_S_gpio_40040080_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040080_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040080_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040080_IRQ_NUM 7
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_flags 256
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_flags 1280
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_flags 1536
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_flags 1792
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_flags 2048
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_flags 2304
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_flags 2560
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_40040080_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq0_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq4_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq5_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq6_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq7_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq8_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_VAL_irq DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_VAL_priority DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_VAL_flags DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_VAL_flags
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_IRQ_NAME_port_irq9_CONTROLLER DT_N_S_soc_S_gpio_40040080_IRQ_IDX_6_CONTROLLER
#define DT_N_S_soc_S_gpio_40040080_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040080_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040080_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040080_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040080_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040080_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040080_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040080_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040080_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040080_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_status "disabled"
#define DT_N_S_soc_S_gpio_40040080_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_40040080_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040080_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040080_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_40040080_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_40040080_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040080_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040080_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, status, 0)
#define DT_N_S_soc_S_gpio_40040080_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, status, 0)
#define DT_N_S_soc_S_gpio_40040080_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040080_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040080_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040080_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040080_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040080_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, compatible, 0)
#define DT_N_S_soc_S_gpio_40040080_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, compatible, 0)
#define DT_N_S_soc_S_gpio_40040080_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_reg {1074004096 /* 0x40040080 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040080_P_reg_IDX_0 1074004096
#define DT_N_S_soc_S_gpio_40040080_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040080_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 256 /* 0x100 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1280 /* 0x500 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1536 /* 0x600 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 1792 /* 0x700 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2048 /* 0x800 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2304 /* 0x900 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 2560 /* 0xa00 */}
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_2 256
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_5 1280
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_8 1536
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_11 1792
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_14 2048
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_15 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_16 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_17 2304
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_18 4294967295
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_20 2560
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names {"port-irq0", "port-irq4", "port-irq5", "port-irq6", "port-irq7", "port-irq8", "port-irq9"}
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_0 "port-irq0"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_0_STRING_UNQUOTED port-irq0
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_0_STRING_TOKEN port_irq0
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PORT_IRQ0
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_1 "port-irq4"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_1_STRING_UNQUOTED port-irq4
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_1_STRING_TOKEN port_irq4
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PORT_IRQ4
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_2 "port-irq5"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_2_STRING_UNQUOTED port-irq5
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_2_STRING_TOKEN port_irq5
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN PORT_IRQ5
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_3 "port-irq6"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_3_STRING_UNQUOTED port-irq6
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_3_STRING_TOKEN port_irq6
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN PORT_IRQ6
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_4 "port-irq7"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_4_STRING_UNQUOTED port-irq7
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_4_STRING_TOKEN port_irq7
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN PORT_IRQ7
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_5 "port-irq8"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_5_STRING_UNQUOTED port-irq8
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_5_STRING_TOKEN port_irq8
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN PORT_IRQ8
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_6 "port-irq9"
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_6_STRING_UNQUOTED port-irq9
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_6_STRING_TOKEN port_irq9
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN PORT_IRQ9
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 1) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 2) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 3) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 4) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 5) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 6)
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 6)
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_LEN 7
#define DT_N_S_soc_S_gpio_40040080_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040080_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins {0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_IDX_0 0
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq0_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq0_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq0_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq0_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq0_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins {2 /* 0x2 */, 11 /* 0xb */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_IDX_0 2
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_IDX_1 11
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 0) \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 1)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 1)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq4_pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_LEN 2
#define DT_N_S_soc_S_gpio_40040080_P_port_irq4_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins {1 /* 0x1 */, 10 /* 0xa */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_IDX_0 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_IDX_1 10
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 0) \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 1)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 1)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_40040080, port_irq5_pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_LEN 2
#define DT_N_S_soc_S_gpio_40040080_P_port_irq5_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins {9 /* 0x9 */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_IDX_0 9
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq6_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq6_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq6_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq6_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq6_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins {8 /* 0x8 */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_IDX_0 8
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq7_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq7_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq7_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq7_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq7_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins {15 /* 0xf */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_IDX_0 15
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq8_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq8_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq8_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq8_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq8_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins {14 /* 0xe */}
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_IDX_0 14
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040080, port_irq9_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040080, port_irq9_pins, 0)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq9_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040080, port_irq9_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_LEN 1
#define DT_N_S_soc_S_gpio_40040080_P_port_irq9_pins_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400400a0
 *
 * Node identifier: DT_N_S_soc_S_gpio_400400a0
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400400a0_PATH "/soc/gpio@400400a0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400400a0_FULL_NAME "gpio@400400a0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400400a0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400400a0_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400400a0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_NODELABEL(fn) fn(ioport5)
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400400a0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400400a0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400400a0_ORD 22
#define DT_N_S_soc_S_gpio_400400a0_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400400a0_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400400a0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400400a0_EXISTS 1
#define DT_N_INST_5_renesas_ra_gpio DT_N_S_soc_S_gpio_400400a0
#define DT_N_NODELABEL_ioport5      DT_N_S_soc_S_gpio_400400a0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400400a0_REG_NUM 1
#define DT_N_S_soc_S_gpio_400400a0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_REG_IDX_0_VAL_ADDRESS 1074004128 /* 0x400400a0 */
#define DT_N_S_soc_S_gpio_400400a0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_400400a0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400400a0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NUM 3
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_flags 3072
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_flags 3328
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_flags 3840
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_gpio_400400a0_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_VAL_irq DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_VAL_priority DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_VAL_flags DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq11_CONTROLLER DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_VAL_irq DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_VAL_priority DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_VAL_flags DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq12_CONTROLLER DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_VAL_irq DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_VAL_priority DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_VAL_flags DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_IRQ_NAME_port_irq14_CONTROLLER DT_N_S_soc_S_gpio_400400a0_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_gpio_400400a0_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_400400a0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_400400a0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_400400a0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400400a0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400400a0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400400a0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_ngpios 16
#define DT_N_S_soc_S_gpio_400400a0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400400a0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400400a0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_status "disabled"
#define DT_N_S_soc_S_gpio_400400a0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_400400a0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_400400a0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_400400a0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_400400a0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_400400a0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_400400a0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_400400a0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400a0, status, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400a0, status, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400a0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400a0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400400a0_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400a0, compatible, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400a0, compatible, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400a0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400a0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400400a0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_reg {1074004128 /* 0x400400a0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_400400a0_P_reg_IDX_0 1074004128
#define DT_N_S_soc_S_gpio_400400a0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_400400a0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 3072 /* 0xc00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 3328 /* 0xd00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 3840 /* 0xf00 */}
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_2 3072
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_5 3328
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_8 3840
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names {"port-irq11", "port-irq12", "port-irq14"}
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_0 "port-irq11"
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_0_STRING_UNQUOTED port-irq11
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_0_STRING_TOKEN port_irq11
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PORT_IRQ11
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_1 "port-irq12"
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_1_STRING_UNQUOTED port-irq12
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_1_STRING_TOKEN port_irq12
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PORT_IRQ12
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_2 "port-irq14"
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_2_STRING_UNQUOTED port-irq14
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_2_STRING_TOKEN port_irq14
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN PORT_IRQ14
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 1) \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 2)
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 2)
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400400a0, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_LEN 3
#define DT_N_S_soc_S_gpio_400400a0_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400400a0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins {1 /* 0x1 */}
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_IDX_0 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400a0, port_irq11_pins, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400a0, port_irq11_pins, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400a0, port_irq11_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400a0, port_irq11_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_LEN 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq11_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins {2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_IDX_0 2
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400a0, port_irq12_pins, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400a0, port_irq12_pins, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400a0, port_irq12_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400a0, port_irq12_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_LEN 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq12_pins_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins {5 /* 0x5 */}
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_IDX_0 5
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400a0, port_irq14_pins, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400a0, port_irq14_pins, 0)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400a0, port_irq14_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400a0, port_irq14_pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_LEN 1
#define DT_N_S_soc_S_gpio_400400a0_P_port_irq14_pins_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400400c0
 *
 * Node identifier: DT_N_S_soc_S_gpio_400400c0
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400400c0_PATH "/soc/gpio@400400c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400400c0_FULL_NAME "gpio@400400c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400400c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400400c0_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400400c0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_NODELABEL(fn) fn(ioport6)
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400400c0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400400c0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400400c0_ORD 23
#define DT_N_S_soc_S_gpio_400400c0_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400400c0_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400400c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400400c0_EXISTS 1
#define DT_N_INST_6_renesas_ra_gpio DT_N_S_soc_S_gpio_400400c0
#define DT_N_NODELABEL_ioport6      DT_N_S_soc_S_gpio_400400c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400400c0_REG_NUM 1
#define DT_N_S_soc_S_gpio_400400c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_REG_IDX_0_VAL_ADDRESS 1074004160 /* 0x400400c0 */
#define DT_N_S_soc_S_gpio_400400c0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_400400c0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400400c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400400c0_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_400400c0_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_400400c0_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_400400c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_400400c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_400400c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400400c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400400c0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400400c0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_ngpios 16
#define DT_N_S_soc_S_gpio_400400c0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400400c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400400c0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_status "disabled"
#define DT_N_S_soc_S_gpio_400400c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_400400c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_400400c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_400400c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_400400c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_400400c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_400400c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_400400c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400c0, status, 0)
#define DT_N_S_soc_S_gpio_400400c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400c0, status, 0)
#define DT_N_S_soc_S_gpio_400400c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400c0_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400400c0_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400c0, compatible, 0)
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400c0, compatible, 0)
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400400c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_reg {1074004160 /* 0x400400c0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_400400c0_P_reg_IDX_0 1074004160
#define DT_N_S_soc_S_gpio_400400c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_400400c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400400c0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400400c0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400400e0
 *
 * Node identifier: DT_N_S_soc_S_gpio_400400e0
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400400e0_PATH "/soc/gpio@400400e0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400400e0_FULL_NAME "gpio@400400e0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400400e0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400400e0_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400400e0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_NODELABEL(fn) fn(ioport7)
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400400e0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400400e0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400400e0_ORD 24
#define DT_N_S_soc_S_gpio_400400e0_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400400e0_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400400e0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400400e0_EXISTS 1
#define DT_N_INST_7_renesas_ra_gpio DT_N_S_soc_S_gpio_400400e0
#define DT_N_NODELABEL_ioport7      DT_N_S_soc_S_gpio_400400e0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400400e0_REG_NUM 1
#define DT_N_S_soc_S_gpio_400400e0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_REG_IDX_0_VAL_ADDRESS 1074004192 /* 0x400400e0 */
#define DT_N_S_soc_S_gpio_400400e0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_400400e0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400400e0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400400e0_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_400400e0_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_400400e0_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_400400e0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_400400e0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_400400e0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400400e0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400400e0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400400e0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_ngpios 16
#define DT_N_S_soc_S_gpio_400400e0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400400e0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400400e0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_status "disabled"
#define DT_N_S_soc_S_gpio_400400e0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_400400e0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_400400e0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_400400e0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_400400e0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_400400e0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_400400e0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_400400e0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400e0, status, 0)
#define DT_N_S_soc_S_gpio_400400e0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400e0, status, 0)
#define DT_N_S_soc_S_gpio_400400e0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400e0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400e0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400e0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400e0_P_status_LEN 1
#define DT_N_S_soc_S_gpio_400400e0_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400400e0, compatible, 0)
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400400e0, compatible, 0)
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400400e0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400400e0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400400e0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_reg {1074004192 /* 0x400400e0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_400400e0_P_reg_IDX_0 1074004192
#define DT_N_S_soc_S_gpio_400400e0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_400400e0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400400e0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400400e0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040100
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040100
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040100_PATH "/soc/gpio@40040100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040100_FULL_NAME "gpio@40040100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040100_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040100_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040100_FOREACH_NODELABEL(fn) fn(ioport8)
#define DT_N_S_soc_S_gpio_40040100_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport8, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040100_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040100_ORD 25
#define DT_N_S_soc_S_gpio_40040100_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040100_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040100_EXISTS 1
#define DT_N_INST_8_renesas_ra_gpio DT_N_S_soc_S_gpio_40040100
#define DT_N_NODELABEL_ioport8      DT_N_S_soc_S_gpio_40040100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040100_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_REG_IDX_0_VAL_ADDRESS 1074004224 /* 0x40040100 */
#define DT_N_S_soc_S_gpio_40040100_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040100_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040100_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_40040100_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_40040100_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040100_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040100_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040100_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_status "disabled"
#define DT_N_S_soc_S_gpio_40040100_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_40040100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040100_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_40040100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_40040100_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040100_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040100, status, 0)
#define DT_N_S_soc_S_gpio_40040100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040100, status, 0)
#define DT_N_S_soc_S_gpio_40040100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040100_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040100_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040100_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040100_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040100_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040100_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040100, compatible, 0)
#define DT_N_S_soc_S_gpio_40040100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040100, compatible, 0)
#define DT_N_S_soc_S_gpio_40040100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040100_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_reg {1074004224 /* 0x40040100 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040100_P_reg_IDX_0 1074004224
#define DT_N_S_soc_S_gpio_40040100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040100_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40040120
 *
 * Node identifier: DT_N_S_soc_S_gpio_40040120
 *
 * Binding (compatible = renesas,ra-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/renesas,ra-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40040120_PATH "/soc/gpio@40040120"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40040120_FULL_NAME "gpio@40040120"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40040120_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40040120_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40040120_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40040120_FOREACH_NODELABEL(fn) fn(ioport9)
#define DT_N_S_soc_S_gpio_40040120_FOREACH_NODELABEL_VARGS(fn, ...) fn(ioport9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40040120_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40040120_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40040120_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40040120_ORD 26
#define DT_N_S_soc_S_gpio_40040120_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40040120_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40040120_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40040120_EXISTS 1
#define DT_N_INST_9_renesas_ra_gpio DT_N_S_soc_S_gpio_40040120
#define DT_N_NODELABEL_ioport9      DT_N_S_soc_S_gpio_40040120

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40040120_REG_NUM 1
#define DT_N_S_soc_S_gpio_40040120_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_REG_IDX_0_VAL_ADDRESS 1074004256 /* 0x40040120 */
#define DT_N_S_soc_S_gpio_40040120_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_40040120_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40040120_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40040120_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_40040120_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_40040120_COMPAT_MATCHES_renesas_ra_gpio 1
#define DT_N_S_soc_S_gpio_40040120_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_gpio_40040120_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_COMPAT_MODEL_IDX_0 "ra-gpio"
#define DT_N_S_soc_S_gpio_40040120_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40040120_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40040120_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40040120_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_ngpios 16
#define DT_N_S_soc_S_gpio_40040120_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40040120_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40040120_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_status "disabled"
#define DT_N_S_soc_S_gpio_40040120_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_gpio_40040120_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040120_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040120_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_gpio_40040120_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_gpio_40040120_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_gpio_40040120_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_gpio_40040120_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040120, status, 0)
#define DT_N_S_soc_S_gpio_40040120_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040120, status, 0)
#define DT_N_S_soc_S_gpio_40040120_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040120, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040120_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040120, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040120_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40040120_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_compatible {"renesas,ra-gpio"}
#define DT_N_S_soc_S_gpio_40040120_P_compatible_IDX_0 "renesas,ra-gpio"
#define DT_N_S_soc_S_gpio_40040120_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-gpio
#define DT_N_S_soc_S_gpio_40040120_P_compatible_IDX_0_STRING_TOKEN renesas_ra_gpio
#define DT_N_S_soc_S_gpio_40040120_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_GPIO
#define DT_N_S_soc_S_gpio_40040120_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40040120, compatible, 0)
#define DT_N_S_soc_S_gpio_40040120_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40040120, compatible, 0)
#define DT_N_S_soc_S_gpio_40040120_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40040120, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040120_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40040120, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40040120_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40040120_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_reg {1074004256 /* 0x40040120 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_40040120_P_reg_IDX_0 1074004256
#define DT_N_S_soc_S_gpio_40040120_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_40040120_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40040120_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40040120_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 27
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 28
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001c000
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001c000_PATH "/soc/flash-controller@4001c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001c000_FULL_NAME "flash-controller@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001c000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_4001c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_NODELABEL(fn) fn(fcu)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(fcu, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001c000_CHILD_NUM 2
#define DT_N_S_soc_S_flash_controller_4001c000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001c000_ORD 29
#define DT_N_S_soc_S_flash_controller_4001c000_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001c000_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001c000_SUPPORTS_ORDS \
	30, /* /soc/flash-controller@4001c000/flash1@40100000 */ \
	31, /* /soc/flash-controller@4001c000/flash0@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001c000_EXISTS 1
#define DT_N_INST_0_renesas_ra_flash_controller DT_N_S_soc_S_flash_controller_4001c000
#define DT_N_NODELABEL_fcu                      DT_N_S_soc_S_flash_controller_4001c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_flash_controller_4001c000_REG_IDX_0_VAL_SIZE 68 /* 0x44 */
#define DT_N_S_soc_S_flash_controller_4001c000_REG_NAME_fcache_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_REG_NAME_fcache_VAL_ADDRESS DT_N_S_soc_S_flash_controller_4001c000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_flash_controller_4001c000_REG_NAME_fcache_VAL_SIZE DT_N_S_soc_S_flash_controller_4001c000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_flash_controller_4001c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_4001c000_COMPAT_MATCHES_renesas_ra_flash_controller 1
#define DT_N_S_soc_S_flash_controller_4001c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_flash_controller_4001c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_COMPAT_MODEL_IDX_0 "ra-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible {"renesas,ra-flash-controller"}
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_IDX_0 "renesas,ra-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-flash-controller
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_IDX_0_STRING_TOKEN renesas_ra_flash_controller
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg {1073856512 /* 0x4001c000 */, 68 /* 0x44 */}
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_IDX_1 68
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names {"fcache"}
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_IDX_0 "fcache"
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_IDX_0_STRING_UNQUOTED fcache
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_IDX_0_STRING_TOKEN fcache
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_IDX_0_STRING_UPPER_TOKEN FCACHE
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000, reg_names, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000, reg_names, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, reg_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, reg_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_status "okay"
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000, status, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000, status, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001c000/flash1@40100000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_PATH "/soc/flash-controller@4001c000/flash1@40100000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FULL_NAME "flash1@40100000"

/* Node parent (/soc/flash-controller@4001c000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_PARENT DT_N_S_soc_S_flash_controller_4001c000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_NODELABEL(fn) fn(flash1)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_ORD 30
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_REQUIRES_ORDS \
	29, /* /soc/flash-controller@4001c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_EXISTS 1
#define DT_N_INST_1_soc_nv_flash DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000
#define DT_N_NODELABEL_flash1    DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_REG_IDX_0_VAL_ADDRESS 1074790400 /* 0x40100000 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_reg {1074790400 /* 0x40100000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_reg_IDX_0 1074790400
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001c000/flash0@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_PATH "/soc/flash-controller@4001c000/flash0@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FULL_NAME "flash0@0"

/* Node parent (/soc/flash-controller@4001c000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_PARENT DT_N_S_soc_S_flash_controller_4001c000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_ORD 31
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_REQUIRES_ORDS \
	29, /* /soc/flash-controller@4001c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_SUPPORTS_ORDS \
	32, /* /soc/flash-controller@4001c000/flash0@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_reg {0 /* 0x0 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_reg_IDX_1 262144
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001c000/flash0@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_PATH "/soc/flash-controller@4001c000/flash0@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@4001c000/flash0@0) identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_CHILD_NUM 2
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_ORD 32
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_REQUIRES_ORDS \
	31, /* /soc/flash-controller@4001c000/flash0@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_SUPPORTS_ORDS \
	33, /* /soc/flash-controller@4001c000/flash0@0/partitions/partition@0 */ \
	34, /* /soc/flash-controller@4001c000/flash0@0/partitions/partition@4000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@4001c000/flash0@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@4001c000/flash0@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@4001c000/flash0@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_ORD 33
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	32, /* /soc/flash-controller@4001c000/flash0@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label "bootloader"
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED bootloader
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_STRING_TOKEN bootloader
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN BOOTLOADER
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_IDX_0 "bootloader"
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001c000/flash0@0/partitions/partition@4000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_PATH "/soc/flash-controller@4001c000/flash0@0/partitions/partition@4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FULL_NAME "partition@4000"

/* Node parent (/soc/flash-controller@4001c000/flash0@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_PARENT DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_NODELABEL(fn) fn(code_partition)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_NODELABEL_VARGS(fn, ...) fn(code_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_ORD 34
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_REQUIRES_ORDS \
	32, /* /soc/flash-controller@4001c000/flash0@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_REG_IDX_0_VAL_ADDRESS 16384 /* 0x4000 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_REG_IDX_0_VAL_SIZE 245760 /* 0x3c000 */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label "code"
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_STRING_UNQUOTED code
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_STRING_TOKEN code
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_STRING_UPPER_TOKEN CODE
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_IDX_0 "code"
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_read_only 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_reg {16384 /* 0x4000 */, 245760 /* 0x3c000 */}
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_reg_IDX_0 16384
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_reg_IDX_1 245760
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40040800
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40040800
 *
 * Binding (compatible = renesas,ra-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/renesas,ra-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40040800_PATH "/soc/pinctrl@40040800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40040800_FULL_NAME "pinctrl@40040800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinctrl_40040800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40040800_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40040800_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40040800_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_40040800_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40040800_ORD 35
#define DT_N_S_soc_S_pinctrl_40040800_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40040800_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40040800_SUPPORTS_ORDS \
	36, /* /soc/pinctrl@40040800/sci2_default */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40040800_EXISTS 1
#define DT_N_INST_0_renesas_ra_pinctrl DT_N_S_soc_S_pinctrl_40040800
#define DT_N_NODELABEL_pinctrl         DT_N_S_soc_S_pinctrl_40040800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40040800_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40040800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_REG_IDX_0_VAL_ADDRESS 1074006016 /* 0x40040800 */
#define DT_N_S_soc_S_pinctrl_40040800_REG_IDX_0_VAL_SIZE 1280 /* 0x500 */
#define DT_N_S_soc_S_pinctrl_40040800_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_REG_IDX_1_VAL_ADDRESS 1074007299 /* 0x40040d03 */
#define DT_N_S_soc_S_pinctrl_40040800_REG_IDX_1_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_pinctrl_40040800_REG_NAME_pfs_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_REG_NAME_pfs_VAL_ADDRESS DT_N_S_soc_S_pinctrl_40040800_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_pinctrl_40040800_REG_NAME_pfs_VAL_SIZE DT_N_S_soc_S_pinctrl_40040800_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_pinctrl_40040800_REG_NAME_pmisc_pwpr_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_REG_NAME_pmisc_pwpr_VAL_ADDRESS DT_N_S_soc_S_pinctrl_40040800_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_pinctrl_40040800_REG_NAME_pmisc_pwpr_VAL_SIZE DT_N_S_soc_S_pinctrl_40040800_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_pinctrl_40040800_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40040800_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40040800_COMPAT_MATCHES_renesas_ra_pinctrl 1
#define DT_N_S_soc_S_pinctrl_40040800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_pinctrl_40040800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_COMPAT_MODEL_IDX_0 "ra-pinctrl"
#define DT_N_S_soc_S_pinctrl_40040800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40040800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40040800_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40040800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40040800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40040800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40040800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40040800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40040800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40040800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40040800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40040800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40040800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40040800, status, 0)
#define DT_N_S_soc_S_pinctrl_40040800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800, status, 0)
#define DT_N_S_soc_S_pinctrl_40040800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40040800_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible {"renesas,ra-pinctrl"}
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_IDX_0 "renesas,ra-pinctrl"
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-pinctrl
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_IDX_0_STRING_TOKEN renesas_ra_pinctrl
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_PINCTRL
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40040800, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40040800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg {1074006016 /* 0x40040800 */, 1280 /* 0x500 */, 1074007299 /* 0x40040d03 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_0 1074006016
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_1 1280
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_2 1074007299
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_3 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names {"pfs", "pmisc_pwpr"}
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_0 "pfs"
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_0_STRING_UNQUOTED pfs
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_0_STRING_TOKEN pfs
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_0_STRING_UPPER_TOKEN PFS
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_1 "pmisc_pwpr"
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_1_STRING_UNQUOTED pmisc_pwpr
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_1_STRING_TOKEN pmisc_pwpr
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_1_STRING_UPPER_TOKEN PMISC_PWPR
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 0) \
	fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 1)
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 1)
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40040800, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_LEN 2
#define DT_N_S_soc_S_pinctrl_40040800_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_40040800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40040800/sci2_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40040800_S_sci2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_PATH "/soc/pinctrl@40040800/sci2_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FULL_NAME "sci2_default"

/* Node parent (/soc/pinctrl@40040800) identifier: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_PARENT DT_N_S_soc_S_pinctrl_40040800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_NODELABEL(fn) fn(sci2_default)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(sci2_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_ORD 36
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_REQUIRES_ORDS \
	35, /* /soc/pinctrl@40040800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_SUPPORTS_ORDS \
	37, /* /soc/pinctrl@40040800/sci2_default/group1 */ \
	44, /* /soc/sci@40070040 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_EXISTS 1
#define DT_N_NODELABEL_sci2_default DT_N_S_soc_S_pinctrl_40040800_S_sci2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pinctrl@40040800/sci2_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_PATH "/soc/pinctrl@40040800/sci2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pinctrl@40040800/sci2_default) identifier: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_40040800_S_sci2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_ORD 37
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_REQUIRES_ORDS \
	36, /* /soc/pinctrl@40040800/sci2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux {73596928 /* 0x4630000 */, 73728000 /* 0x4650000 */}
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_IDX_0 73596928
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_IDX_1 73728000
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /clocks/hoco
 *
 * Node identifier: DT_N_S_clocks_S_hoco
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_hoco_PATH "/clocks/hoco"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_hoco_FULL_NAME "hoco"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_hoco_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_hoco_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_hoco_NODELABEL_NUM 1
#define DT_N_S_clocks_S_hoco_FOREACH_NODELABEL(fn) fn(hoco)
#define DT_N_S_clocks_S_hoco_FOREACH_NODELABEL_VARGS(fn, ...) fn(hoco, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_hoco_CHILD_NUM 0
#define DT_N_S_clocks_S_hoco_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hoco_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_hoco_ORD 38
#define DT_N_S_clocks_S_hoco_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_hoco_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_hoco_SUPPORTS_ORDS \
	39, /* /soc/cgc@4001e000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_hoco_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_hoco
#define DT_N_NODELABEL_hoco     DT_N_S_clocks_S_hoco

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_hoco_REG_NUM 0
#define DT_N_S_clocks_S_hoco_RANGES_NUM 0
#define DT_N_S_clocks_S_hoco_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_hoco_IRQ_NUM 0
#define DT_N_S_clocks_S_hoco_IRQ_LEVEL 0
#define DT_N_S_clocks_S_hoco_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_hoco_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_hoco_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_hoco_P_wakeup_source 0
#define DT_N_S_clocks_S_hoco_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_hoco_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_status "okay"
#define DT_N_S_clocks_S_hoco_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_hoco_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_hoco_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_hoco_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_hoco_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_hoco_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_hoco_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_hoco_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_hoco, status, 0)
#define DT_N_S_clocks_S_hoco_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_hoco, status, 0)
#define DT_N_S_clocks_S_hoco_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_hoco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hoco_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hoco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hoco_P_status_LEN 1
#define DT_N_S_clocks_S_hoco_P_status_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_hoco_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_hoco_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_hoco_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_hoco_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_hoco_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_hoco, compatible, 0)
#define DT_N_S_clocks_S_hoco_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_hoco, compatible, 0)
#define DT_N_S_clocks_S_hoco_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_hoco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hoco_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hoco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hoco_P_compatible_LEN 1
#define DT_N_S_clocks_S_hoco_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_hoco_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_hoco_P_clock_frequency 48000000
#define DT_N_S_clocks_S_hoco_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/cgc@4001e000
 *
 * Node identifier: DT_N_S_soc_S_cgc_4001e000
 *
 * Binding (compatible = renesas,ra-clock-generation-circuit):
 *   $ZEPHYR_BASE/dts/bindings/clock/renesas,ra-clock-generation-circuit.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_cgc_4001e000_PATH "/soc/cgc@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_cgc_4001e000_FULL_NAME "cgc@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_cgc_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_cgc_4001e000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_cgc_4001e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_NODELABEL(fn) fn(cgc)
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(cgc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_cgc_4001e000_CHILD_NUM 0
#define DT_N_S_soc_S_cgc_4001e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_cgc_4001e000_ORD 39
#define DT_N_S_soc_S_cgc_4001e000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_cgc_4001e000_REQUIRES_ORDS \
	13, /* /soc */ \
	38, /* /clocks/hoco */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_cgc_4001e000_SUPPORTS_ORDS \
	40, /* /soc/sci@40070000 */ \
	42, /* /soc/sci@40070020 */ \
	44, /* /soc/sci@40070040 */ \
	46, /* /soc/sci@40070120 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_cgc_4001e000_EXISTS 1
#define DT_N_INST_0_renesas_ra_clock_generation_circuit DT_N_S_soc_S_cgc_4001e000
#define DT_N_NODELABEL_cgc                              DT_N_S_soc_S_cgc_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_cgc_4001e000_REG_NUM 2
#define DT_N_S_soc_S_cgc_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_cgc_4001e000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_cgc_4001e000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_REG_IDX_1_VAL_ADDRESS 1074032640 /* 0x40047000 */
#define DT_N_S_soc_S_cgc_4001e000_REG_IDX_1_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_cgc_4001e000_REG_NAME_system_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_REG_NAME_system_VAL_ADDRESS DT_N_S_soc_S_cgc_4001e000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_cgc_4001e000_REG_NAME_system_VAL_SIZE DT_N_S_soc_S_cgc_4001e000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_cgc_4001e000_REG_NAME_mstp_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_REG_NAME_mstp_VAL_ADDRESS DT_N_S_soc_S_cgc_4001e000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_cgc_4001e000_REG_NAME_mstp_VAL_SIZE DT_N_S_soc_S_cgc_4001e000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_cgc_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_cgc_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_cgc_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_cgc_4001e000_IRQ_LEVEL 0
#define DT_N_S_soc_S_cgc_4001e000_COMPAT_MATCHES_renesas_ra_clock_generation_circuit 1
#define DT_N_S_soc_S_cgc_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_cgc_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_COMPAT_MODEL_IDX_0 "ra-clock-generation-circuit"
#define DT_N_S_soc_S_cgc_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_cgc_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_cgc_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_cgc_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_cgc_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_compatible {"renesas,ra-clock-generation-circuit"}
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_IDX_0 "renesas,ra-clock-generation-circuit"
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-clock-generation-circuit
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_IDX_0_STRING_TOKEN renesas_ra_clock_generation_circuit
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_CLOCK_GENERATION_CIRCUIT
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_cgc_4001e000, compatible, 0)
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_cgc_4001e000, compatible, 0)
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_cgc_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_cgc_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_cgc_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg {1073864704 /* 0x4001e000 */, 64 /* 0x40 */, 1074032640 /* 0x40047000 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_1 64
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_2 1074032640
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_3 16
#define DT_N_S_soc_S_cgc_4001e000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names {"system", "mstp"}
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_0 "system"
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_0_STRING_UNQUOTED system
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_0_STRING_TOKEN system
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_0_STRING_UPPER_TOKEN SYSTEM
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_1 "mstp"
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_1_STRING_UNQUOTED mstp
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_1_STRING_TOKEN mstp
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_1_STRING_UPPER_TOKEN MSTP
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 0) \
	fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 1)
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 1)
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_cgc_4001e000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_LEN 2
#define DT_N_S_soc_S_cgc_4001e000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_cgc_4001e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_iclk_div 1
#define DT_N_S_soc_S_cgc_4001e000_P_iclk_div_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_fclk_div 2
#define DT_N_S_soc_S_cgc_4001e000_P_fclk_div_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclka_div 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclka_div_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclkb_div 2
#define DT_N_S_soc_S_cgc_4001e000_P_pclkb_div_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclkc_div 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclkc_div_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclkd_div 1
#define DT_N_S_soc_S_cgc_4001e000_P_pclkd_div_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source DT_N_S_clocks_S_hoco
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_IDX_0 DT_N_S_clocks_S_hoco
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_IDX_0_PH DT_N_S_clocks_S_hoco
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_cgc_4001e000, clock_source, 0)
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_cgc_4001e000, clock_source, 0)
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_cgc_4001e000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_cgc_4001e000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_LEN 1
#define DT_N_S_soc_S_cgc_4001e000_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070000
 *
 * Node identifier: DT_N_S_soc_S_sci_40070000
 *
 * Binding (compatible = renesas,ra-sci):
 *   $ZEPHYR_BASE/dts/bindings/misc/renesas,ra-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070000_PATH "/soc/sci@40070000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070000_FULL_NAME "sci@40070000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sci_40070000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sci_40070000_FOREACH_NODELABEL(fn) fn(sci0)
#define DT_N_S_soc_S_sci_40070000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sci0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070000_CHILD_NUM 1
#define DT_N_S_soc_S_sci_40070000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sci_40070000_S_uart)
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000_S_uart)
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070000_ORD 40
#define DT_N_S_soc_S_sci_40070000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070000_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */ \
	39, /* /soc/cgc@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070000_SUPPORTS_ORDS \
	41, /* /soc/sci@40070000/uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070000_EXISTS 1
#define DT_N_INST_1_renesas_ra_sci DT_N_S_soc_S_sci_40070000
#define DT_N_NODELABEL_sci0        DT_N_S_soc_S_sci_40070000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070000_REG_NUM 1
#define DT_N_S_soc_S_sci_40070000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_REG_IDX_0_VAL_ADDRESS 1074200576 /* 0x40070000 */
#define DT_N_S_soc_S_sci_40070000_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_sci_40070000_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070000_IRQ_NUM 6
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_flags 38912
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_flags 39168
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_flags 39424
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_flags 39680
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_flags 39936
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_flags 40192
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_VAL_irq DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_VAL_priority DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_VAL_flags DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_CONTROLLER DT_N_S_soc_S_sci_40070000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_VAL_irq DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_VAL_priority DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_VAL_flags DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_txi_CONTROLLER DT_N_S_soc_S_sci_40070000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_VAL_irq DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_VAL_priority DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_VAL_flags DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_tei_CONTROLLER DT_N_S_soc_S_sci_40070000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_VAL_irq DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_VAL_priority DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_VAL_flags DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_eri_CONTROLLER DT_N_S_soc_S_sci_40070000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_VAL_irq DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_VAL_priority DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_VAL_flags DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_am_CONTROLLER DT_N_S_soc_S_sci_40070000_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_VAL_irq DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_VAL_priority DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_VAL_flags DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_VAL_flags
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_IRQ_NAME_rxi_or_eri_CONTROLLER DT_N_S_soc_S_sci_40070000_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_sci_40070000_COMPAT_MATCHES_renesas_ra_sci 1
#define DT_N_S_soc_S_sci_40070000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_COMPAT_MODEL_IDX_0 "ra-sci"
#define DT_N_S_soc_S_sci_40070000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070000_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_status "disabled"
#define DT_N_S_soc_S_sci_40070000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sci_40070000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sci_40070000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sci_40070000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sci_40070000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sci_40070000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070000, status, 0)
#define DT_N_S_soc_S_sci_40070000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000, status, 0)
#define DT_N_S_soc_S_sci_40070000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070000_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_compatible {"renesas,ra-sci"}
#define DT_N_S_soc_S_sci_40070000_P_compatible_IDX_0 "renesas,ra-sci"
#define DT_N_S_soc_S_sci_40070000_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-sci
#define DT_N_S_soc_S_sci_40070000_P_compatible_IDX_0_STRING_TOKEN renesas_ra_sci
#define DT_N_S_soc_S_sci_40070000_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_SCI
#define DT_N_S_soc_S_sci_40070000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070000, compatible, 0)
#define DT_N_S_soc_S_sci_40070000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000, compatible, 0)
#define DT_N_S_soc_S_sci_40070000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_reg {1074200576 /* 0x40070000 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_sci_40070000_P_reg_IDX_0 1074200576
#define DT_N_S_soc_S_sci_40070000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_reg_IDX_1 32
#define DT_N_S_soc_S_sci_40070000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 38912 /* 0x9800 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 39168 /* 0x9900 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 39424 /* 0x9a00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 39680 /* 0x9b00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 39936 /* 0x9c00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 40192 /* 0x9d00 */}
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_2 38912
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_5 39168
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_8 39424
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_11 39680
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_14 39936
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_15 4294967295
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_16 0
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_17 40192
#define DT_N_S_soc_S_sci_40070000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names {"rxi", "txi", "tei", "eri", "am", "rxi-or-eri"}
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_0 "rxi"
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_0_STRING_UNQUOTED rxi
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_0_STRING_TOKEN rxi
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RXI
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_1 "txi"
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_1_STRING_UNQUOTED txi
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_1_STRING_TOKEN txi
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TXI
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_2 "tei"
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_2_STRING_UNQUOTED tei
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_2_STRING_TOKEN tei
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TEI
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_3 "eri"
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_3_STRING_UNQUOTED eri
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_3_STRING_TOKEN eri
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN ERI
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_4 "am"
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_4_STRING_UNQUOTED am
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_4_STRING_TOKEN am
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN AM
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_5 "rxi-or-eri"
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_5_STRING_UNQUOTED rxi-or-eri
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_5_STRING_TOKEN rxi_or_eri
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN RXI_OR_ERI
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 3) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 4) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 5)
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 5)
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 5, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070000, interrupt_names, 5, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_LEN 6
#define DT_N_S_soc_S_sci_40070000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_clocks_IDX_0_PH DT_N_S_soc_S_cgc_4001e000
#define DT_N_S_soc_S_sci_40070000_P_clocks_IDX_0_VAL_id 300941312
#define DT_N_S_soc_S_sci_40070000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070000, clocks, 0)
#define DT_N_S_soc_S_sci_40070000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000, clocks, 0)
#define DT_N_S_soc_S_sci_40070000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_P_clocks_LEN 1
#define DT_N_S_soc_S_sci_40070000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070000/uart
 *
 * Node identifier: DT_N_S_soc_S_sci_40070000_S_uart
 *
 * Binding (compatible = renesas,ra-uart-sci):
 *   $ZEPHYR_BASE/dts/bindings/serial/renesas,ra-uart-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070000_S_uart_PATH "/soc/sci@40070000/uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070000_S_uart_FULL_NAME "uart"

/* Node parent (/soc/sci@40070000) identifier: */
#define DT_N_S_soc_S_sci_40070000_S_uart_PARENT DT_N_S_soc_S_sci_40070000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070000_S_uart_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070000_S_uart_NODELABEL_NUM 0
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070000_S_uart_CHILD_NUM 0
#define DT_N_S_soc_S_sci_40070000_S_uart_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070000_S_uart_ORD 41
#define DT_N_S_soc_S_sci_40070000_S_uart_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070000_S_uart_REQUIRES_ORDS \
	40, /* /soc/sci@40070000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070000_S_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070000_S_uart_EXISTS 1
#define DT_N_INST_1_renesas_ra_uart_sci DT_N_S_soc_S_sci_40070000_S_uart

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070000_S_uart_REG_NUM 0
#define DT_N_S_soc_S_sci_40070000_S_uart_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070000_S_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070000_S_uart_IRQ_NUM 0
#define DT_N_S_soc_S_sci_40070000_S_uart_IRQ_LEVEL 0
#define DT_N_S_soc_S_sci_40070000_S_uart_COMPAT_MATCHES_renesas_ra_uart_sci 1
#define DT_N_S_soc_S_sci_40070000_S_uart_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070000_S_uart_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_COMPAT_MODEL_IDX_0 "ra-uart-sci"
#define DT_N_S_soc_S_sci_40070000_S_uart_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070000_S_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070000_S_uart_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070000_S_uart_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070000_S_uart_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status "disabled"
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070000_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible {"renesas,ra-uart-sci"}
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_IDX_0 "renesas,ra-uart-sci"
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-uart-sci
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_IDX_0_STRING_TOKEN renesas_ra_uart_sci
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_UART_SCI
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070000_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070000_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070000_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070000_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070000_S_uart_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sci_40070000_S_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_sci_40070000_S_uart_P_hw_flow_control_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070020
 *
 * Node identifier: DT_N_S_soc_S_sci_40070020
 *
 * Binding (compatible = renesas,ra-sci):
 *   $ZEPHYR_BASE/dts/bindings/misc/renesas,ra-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070020_PATH "/soc/sci@40070020"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070020_FULL_NAME "sci@40070020"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sci_40070020_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070020_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070020_NODELABEL_NUM 1
#define DT_N_S_soc_S_sci_40070020_FOREACH_NODELABEL(fn) fn(sci1)
#define DT_N_S_soc_S_sci_40070020_FOREACH_NODELABEL_VARGS(fn, ...) fn(sci1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070020_CHILD_NUM 1
#define DT_N_S_soc_S_sci_40070020_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sci_40070020_S_uart)
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020_S_uart)
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070020_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070020_ORD 42
#define DT_N_S_soc_S_sci_40070020_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070020_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */ \
	39, /* /soc/cgc@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070020_SUPPORTS_ORDS \
	43, /* /soc/sci@40070020/uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070020_EXISTS 1
#define DT_N_INST_2_renesas_ra_sci DT_N_S_soc_S_sci_40070020
#define DT_N_NODELABEL_sci1        DT_N_S_soc_S_sci_40070020

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070020_REG_NUM 1
#define DT_N_S_soc_S_sci_40070020_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_REG_IDX_0_VAL_ADDRESS 1074200608 /* 0x40070020 */
#define DT_N_S_soc_S_sci_40070020_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_sci_40070020_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070020_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070020_IRQ_NUM 5
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_flags 40448
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_flags 40704
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_flags 40960
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_flags 41216
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_flags 41472
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070020_IRQ_LEVEL 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_VAL_irq DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_VAL_priority DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_VAL_flags DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_rxi_CONTROLLER DT_N_S_soc_S_sci_40070020_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_VAL_irq DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_VAL_priority DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_VAL_flags DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_txi_CONTROLLER DT_N_S_soc_S_sci_40070020_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_VAL_irq DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_VAL_priority DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_VAL_flags DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_tei_CONTROLLER DT_N_S_soc_S_sci_40070020_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_VAL_irq DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_VAL_priority DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_VAL_flags DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_eri_CONTROLLER DT_N_S_soc_S_sci_40070020_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_VAL_irq DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_VAL_priority DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_VAL_flags DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_IRQ_NAME_am_CONTROLLER DT_N_S_soc_S_sci_40070020_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_sci_40070020_COMPAT_MATCHES_renesas_ra_sci 1
#define DT_N_S_soc_S_sci_40070020_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070020_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_COMPAT_MODEL_IDX_0 "ra-sci"
#define DT_N_S_soc_S_sci_40070020_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070020_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070020_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070020_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070020_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_status "disabled"
#define DT_N_S_soc_S_sci_40070020_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sci_40070020_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sci_40070020_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070020_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sci_40070020_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sci_40070020_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sci_40070020_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070020_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070020, status, 0)
#define DT_N_S_soc_S_sci_40070020_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020, status, 0)
#define DT_N_S_soc_S_sci_40070020_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070020_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_compatible {"renesas,ra-sci"}
#define DT_N_S_soc_S_sci_40070020_P_compatible_IDX_0 "renesas,ra-sci"
#define DT_N_S_soc_S_sci_40070020_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-sci
#define DT_N_S_soc_S_sci_40070020_P_compatible_IDX_0_STRING_TOKEN renesas_ra_sci
#define DT_N_S_soc_S_sci_40070020_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_SCI
#define DT_N_S_soc_S_sci_40070020_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070020, compatible, 0)
#define DT_N_S_soc_S_sci_40070020_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020, compatible, 0)
#define DT_N_S_soc_S_sci_40070020_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070020_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_reg {1074200608 /* 0x40070020 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_sci_40070020_P_reg_IDX_0 1074200608
#define DT_N_S_soc_S_sci_40070020_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_reg_IDX_1 32
#define DT_N_S_soc_S_sci_40070020_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_reg_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 40448 /* 0x9e00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 40704 /* 0x9f00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 40960 /* 0xa000 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 41216 /* 0xa100 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 41472 /* 0xa200 */}
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_2 40448
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_5 40704
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_8 40960
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_11 41216
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_14 41472
#define DT_N_S_soc_S_sci_40070020_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names {"rxi", "txi", "tei", "eri", "am"}
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_0 "rxi"
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_0_STRING_UNQUOTED rxi
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_0_STRING_TOKEN rxi
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RXI
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_1 "txi"
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_1_STRING_UNQUOTED txi
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_1_STRING_TOKEN txi
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TXI
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_2 "tei"
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_2_STRING_UNQUOTED tei
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_2_STRING_TOKEN tei
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TEI
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_3 "eri"
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_3_STRING_UNQUOTED eri
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_3_STRING_TOKEN eri
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN ERI
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_4 "am"
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_4_STRING_UNQUOTED am
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_4_STRING_TOKEN am
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN AM
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 0) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 1) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 2) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 3) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 4)
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 4)
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070020, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_LEN 5
#define DT_N_S_soc_S_sci_40070020_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_clocks_IDX_0_PH DT_N_S_soc_S_cgc_4001e000
#define DT_N_S_soc_S_sci_40070020_P_clocks_IDX_0_VAL_id 300941313
#define DT_N_S_soc_S_sci_40070020_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070020, clocks, 0)
#define DT_N_S_soc_S_sci_40070020_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020, clocks, 0)
#define DT_N_S_soc_S_sci_40070020_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_P_clocks_LEN 1
#define DT_N_S_soc_S_sci_40070020_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070020_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070020/uart
 *
 * Node identifier: DT_N_S_soc_S_sci_40070020_S_uart
 *
 * Binding (compatible = renesas,ra-uart-sci):
 *   $ZEPHYR_BASE/dts/bindings/serial/renesas,ra-uart-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070020_S_uart_PATH "/soc/sci@40070020/uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070020_S_uart_FULL_NAME "uart"

/* Node parent (/soc/sci@40070020) identifier: */
#define DT_N_S_soc_S_sci_40070020_S_uart_PARENT DT_N_S_soc_S_sci_40070020

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070020_S_uart_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070020_S_uart_NODELABEL_NUM 0
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070020_S_uart_CHILD_NUM 0
#define DT_N_S_soc_S_sci_40070020_S_uart_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070020_S_uart_ORD 43
#define DT_N_S_soc_S_sci_40070020_S_uart_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070020_S_uart_REQUIRES_ORDS \
	42, /* /soc/sci@40070020 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070020_S_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070020_S_uart_EXISTS 1
#define DT_N_INST_2_renesas_ra_uart_sci DT_N_S_soc_S_sci_40070020_S_uart

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070020_S_uart_REG_NUM 0
#define DT_N_S_soc_S_sci_40070020_S_uart_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070020_S_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070020_S_uart_IRQ_NUM 0
#define DT_N_S_soc_S_sci_40070020_S_uart_IRQ_LEVEL 0
#define DT_N_S_soc_S_sci_40070020_S_uart_COMPAT_MATCHES_renesas_ra_uart_sci 1
#define DT_N_S_soc_S_sci_40070020_S_uart_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070020_S_uart_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_COMPAT_MODEL_IDX_0 "ra-uart-sci"
#define DT_N_S_soc_S_sci_40070020_S_uart_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070020_S_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070020_S_uart_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070020_S_uart_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070020_S_uart_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status "disabled"
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070020_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible {"renesas,ra-uart-sci"}
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_IDX_0 "renesas,ra-uart-sci"
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-uart-sci
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_IDX_0_STRING_TOKEN renesas_ra_uart_sci
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_UART_SCI
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070020_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070020_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070020_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070020_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070020_S_uart_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sci_40070020_S_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_sci_40070020_S_uart_P_hw_flow_control_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070040
 *
 * Node identifier: DT_N_S_soc_S_sci_40070040
 *
 * Binding (compatible = renesas,ra-sci):
 *   $ZEPHYR_BASE/dts/bindings/misc/renesas,ra-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070040_PATH "/soc/sci@40070040"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070040_FULL_NAME "sci@40070040"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sci_40070040_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070040_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070040_NODELABEL_NUM 1
#define DT_N_S_soc_S_sci_40070040_FOREACH_NODELABEL(fn) fn(sci2)
#define DT_N_S_soc_S_sci_40070040_FOREACH_NODELABEL_VARGS(fn, ...) fn(sci2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070040_CHILD_NUM 1
#define DT_N_S_soc_S_sci_40070040_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sci_40070040_S_uart)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040_S_uart)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_sci_40070040_S_uart)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040_S_uart)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070040_ORD 44
#define DT_N_S_soc_S_sci_40070040_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070040_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */ \
	36, /* /soc/pinctrl@40040800/sci2_default */ \
	39, /* /soc/cgc@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070040_SUPPORTS_ORDS \
	45, /* /soc/sci@40070040/uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070040_EXISTS 1
#define DT_N_INST_0_renesas_ra_sci DT_N_S_soc_S_sci_40070040
#define DT_N_NODELABEL_sci2        DT_N_S_soc_S_sci_40070040

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070040_REG_NUM 1
#define DT_N_S_soc_S_sci_40070040_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_REG_IDX_0_VAL_ADDRESS 1074200640 /* 0x40070040 */
#define DT_N_S_soc_S_sci_40070040_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_sci_40070040_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070040_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070040_IRQ_NUM 5
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_flags 41728
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_flags 41984
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_flags 42240
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_flags 42496
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_flags 42752
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070040_IRQ_LEVEL 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_VAL_irq DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_VAL_priority DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_VAL_flags DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_rxi_CONTROLLER DT_N_S_soc_S_sci_40070040_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_VAL_irq DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_VAL_priority DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_VAL_flags DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_txi_CONTROLLER DT_N_S_soc_S_sci_40070040_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_VAL_irq DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_VAL_priority DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_VAL_flags DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_tei_CONTROLLER DT_N_S_soc_S_sci_40070040_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_VAL_irq DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_VAL_priority DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_VAL_flags DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_eri_CONTROLLER DT_N_S_soc_S_sci_40070040_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_VAL_irq DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_VAL_priority DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_VAL_flags DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_IRQ_NAME_am_CONTROLLER DT_N_S_soc_S_sci_40070040_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_sci_40070040_COMPAT_MATCHES_renesas_ra_sci 1
#define DT_N_S_soc_S_sci_40070040_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070040_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_COMPAT_MODEL_IDX_0 "ra-sci"
#define DT_N_S_soc_S_sci_40070040_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070040_PINCTRL_NUM 1
#define DT_N_S_soc_S_sci_40070040_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sci_40070040_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sci_40070040_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sci_40070040_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40040800_S_sci2_default

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070040_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070040_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070040_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_status "okay"
#define DT_N_S_soc_S_sci_40070040_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sci_40070040_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sci_40070040_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sci_40070040_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sci_40070040_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sci_40070040_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sci_40070040_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sci_40070040_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040, status, 0)
#define DT_N_S_soc_S_sci_40070040_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040, status, 0)
#define DT_N_S_soc_S_sci_40070040_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070040_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_compatible {"renesas,ra-sci"}
#define DT_N_S_soc_S_sci_40070040_P_compatible_IDX_0 "renesas,ra-sci"
#define DT_N_S_soc_S_sci_40070040_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-sci
#define DT_N_S_soc_S_sci_40070040_P_compatible_IDX_0_STRING_TOKEN renesas_ra_sci
#define DT_N_S_soc_S_sci_40070040_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_SCI
#define DT_N_S_soc_S_sci_40070040_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040, compatible, 0)
#define DT_N_S_soc_S_sci_40070040_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040, compatible, 0)
#define DT_N_S_soc_S_sci_40070040_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070040_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_reg {1074200640 /* 0x40070040 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_sci_40070040_P_reg_IDX_0 1074200640
#define DT_N_S_soc_S_sci_40070040_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_reg_IDX_1 32
#define DT_N_S_soc_S_sci_40070040_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_reg_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 41728 /* 0xa300 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 41984 /* 0xa400 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 42240 /* 0xa500 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 42496 /* 0xa600 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 42752 /* 0xa700 */}
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_2 41728
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_5 41984
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_8 42240
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_11 42496
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_14 42752
#define DT_N_S_soc_S_sci_40070040_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names {"rxi", "txi", "tei", "eri", "am"}
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_0 "rxi"
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_0_STRING_UNQUOTED rxi
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_0_STRING_TOKEN rxi
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RXI
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_1 "txi"
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_1_STRING_UNQUOTED txi
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_1_STRING_TOKEN txi
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TXI
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_2 "tei"
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_2_STRING_UNQUOTED tei
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_2_STRING_TOKEN tei
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TEI
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_3 "eri"
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_3_STRING_UNQUOTED eri
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_3_STRING_TOKEN eri
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN ERI
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_4 "am"
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_4_STRING_UNQUOTED am
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_4_STRING_TOKEN am
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN AM
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 0) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 1) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 2) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 3) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 4)
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 4)
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070040, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_LEN 5
#define DT_N_S_soc_S_sci_40070040_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_clocks_IDX_0_PH DT_N_S_soc_S_cgc_4001e000
#define DT_N_S_soc_S_sci_40070040_P_clocks_IDX_0_VAL_id 300941314
#define DT_N_S_soc_S_sci_40070040_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040, clocks, 0)
#define DT_N_S_soc_S_sci_40070040_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040, clocks, 0)
#define DT_N_S_soc_S_sci_40070040_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_clocks_LEN 1
#define DT_N_S_soc_S_sci_40070040_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070040_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40040800_S_sci2_default
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40040800_S_sci2_default
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040, pinctrl_0, 0)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040, pinctrl_0, 0)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040, pinctrl_names, 0)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040, pinctrl_names, 0)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sci_40070040_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070040/uart
 *
 * Node identifier: DT_N_S_soc_S_sci_40070040_S_uart
 *
 * Binding (compatible = renesas,ra-uart-sci):
 *   $ZEPHYR_BASE/dts/bindings/serial/renesas,ra-uart-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070040_S_uart_PATH "/soc/sci@40070040/uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070040_S_uart_FULL_NAME "uart"

/* Node parent (/soc/sci@40070040) identifier: */
#define DT_N_S_soc_S_sci_40070040_S_uart_PARENT DT_N_S_soc_S_sci_40070040

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070040_S_uart_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070040_S_uart_NODELABEL_NUM 1
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070040_S_uart_CHILD_NUM 0
#define DT_N_S_soc_S_sci_40070040_S_uart_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070040_S_uart_ORD 45
#define DT_N_S_soc_S_sci_40070040_S_uart_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070040_S_uart_REQUIRES_ORDS \
	44, /* /soc/sci@40070040 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070040_S_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070040_S_uart_EXISTS 1
#define DT_N_INST_0_renesas_ra_uart_sci DT_N_S_soc_S_sci_40070040_S_uart
#define DT_N_NODELABEL_uart2            DT_N_S_soc_S_sci_40070040_S_uart

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070040_S_uart_REG_NUM 0
#define DT_N_S_soc_S_sci_40070040_S_uart_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070040_S_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070040_S_uart_IRQ_NUM 0
#define DT_N_S_soc_S_sci_40070040_S_uart_IRQ_LEVEL 0
#define DT_N_S_soc_S_sci_40070040_S_uart_COMPAT_MATCHES_renesas_ra_uart_sci 1
#define DT_N_S_soc_S_sci_40070040_S_uart_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070040_S_uart_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_COMPAT_MODEL_IDX_0 "ra-uart-sci"
#define DT_N_S_soc_S_sci_40070040_S_uart_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070040_S_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070040_S_uart_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070040_S_uart_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070040_S_uart_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status "okay"
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible {"renesas,ra-uart-sci"}
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_IDX_0 "renesas,ra-uart-sci"
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-uart-sci
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_IDX_0_STRING_TOKEN renesas_ra_uart_sci
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_UART_SCI
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070040_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070040_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070040_S_uart_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_current_speed 115200
#define DT_N_S_soc_S_sci_40070040_S_uart_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_sci_40070040_S_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_sci_40070040_S_uart_P_hw_flow_control_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070120
 *
 * Node identifier: DT_N_S_soc_S_sci_40070120
 *
 * Binding (compatible = renesas,ra-sci):
 *   $ZEPHYR_BASE/dts/bindings/misc/renesas,ra-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070120_PATH "/soc/sci@40070120"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070120_FULL_NAME "sci@40070120"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sci_40070120_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070120_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070120_NODELABEL_NUM 1
#define DT_N_S_soc_S_sci_40070120_FOREACH_NODELABEL(fn) fn(sci9)
#define DT_N_S_soc_S_sci_40070120_FOREACH_NODELABEL_VARGS(fn, ...) fn(sci9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070120_CHILD_NUM 1
#define DT_N_S_soc_S_sci_40070120_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sci_40070120_S_uart)
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120_S_uart)
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120_S_uart, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070120_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070120_ORD 46
#define DT_N_S_soc_S_sci_40070120_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070120_REQUIRES_ORDS \
	13, /* /soc */ \
	14, /* /soc/interrupt-controller@40006000 */ \
	39, /* /soc/cgc@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070120_SUPPORTS_ORDS \
	47, /* /soc/sci@40070120/uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070120_EXISTS 1
#define DT_N_INST_3_renesas_ra_sci DT_N_S_soc_S_sci_40070120
#define DT_N_NODELABEL_sci9        DT_N_S_soc_S_sci_40070120

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070120_REG_NUM 1
#define DT_N_S_soc_S_sci_40070120_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_REG_IDX_0_VAL_ADDRESS 1074200864 /* 0x40070120 */
#define DT_N_S_soc_S_sci_40070120_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_sci_40070120_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070120_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070120_IRQ_NUM 5
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_flags 43008
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_flags 43264
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_flags 43520
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_flags 43776
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_irq 4294967295
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_flags 44032
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40006000
#define DT_N_S_soc_S_sci_40070120_IRQ_LEVEL 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_VAL_irq DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_VAL_priority DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_VAL_flags DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_rxi_CONTROLLER DT_N_S_soc_S_sci_40070120_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_VAL_irq DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_VAL_priority DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_VAL_flags DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_txi_CONTROLLER DT_N_S_soc_S_sci_40070120_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_VAL_irq DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_VAL_priority DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_VAL_flags DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_VAL_flags
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_tei_CONTROLLER DT_N_S_soc_S_sci_40070120_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_VAL_irq DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_VAL_priority DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_VAL_flags DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_VAL_flags
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_eri_CONTROLLER DT_N_S_soc_S_sci_40070120_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_VAL_irq DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_VAL_priority DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_VAL_flags DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_VAL_flags
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_IRQ_NAME_am_CONTROLLER DT_N_S_soc_S_sci_40070120_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_sci_40070120_COMPAT_MATCHES_renesas_ra_sci 1
#define DT_N_S_soc_S_sci_40070120_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070120_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_COMPAT_MODEL_IDX_0 "ra-sci"
#define DT_N_S_soc_S_sci_40070120_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070120_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070120_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070120_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070120_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_status "disabled"
#define DT_N_S_soc_S_sci_40070120_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sci_40070120_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sci_40070120_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070120_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sci_40070120_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sci_40070120_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sci_40070120_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070120_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070120, status, 0)
#define DT_N_S_soc_S_sci_40070120_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120, status, 0)
#define DT_N_S_soc_S_sci_40070120_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070120_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_compatible {"renesas,ra-sci"}
#define DT_N_S_soc_S_sci_40070120_P_compatible_IDX_0 "renesas,ra-sci"
#define DT_N_S_soc_S_sci_40070120_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-sci
#define DT_N_S_soc_S_sci_40070120_P_compatible_IDX_0_STRING_TOKEN renesas_ra_sci
#define DT_N_S_soc_S_sci_40070120_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_SCI
#define DT_N_S_soc_S_sci_40070120_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070120, compatible, 0)
#define DT_N_S_soc_S_sci_40070120_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120, compatible, 0)
#define DT_N_S_soc_S_sci_40070120_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070120_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_reg {1074200864 /* 0x40070120 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_sci_40070120_P_reg_IDX_0 1074200864
#define DT_N_S_soc_S_sci_40070120_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_reg_IDX_1 32
#define DT_N_S_soc_S_sci_40070120_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_reg_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts {4294967295 /* 0xffffffff */, 0 /* 0x0 */, 43008 /* 0xa800 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 43264 /* 0xa900 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 43520 /* 0xaa00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 43776 /* 0xab00 */, 4294967295 /* 0xffffffff */, 0 /* 0x0 */, 44032 /* 0xac00 */}
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_0 4294967295
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_2 43008
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_3 4294967295
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_5 43264
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_6 4294967295
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_8 43520
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_9 4294967295
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_11 43776
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_12 4294967295
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_14 44032
#define DT_N_S_soc_S_sci_40070120_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names {"rxi", "txi", "tei", "eri", "am"}
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_0 "rxi"
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_0_STRING_UNQUOTED rxi
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_0_STRING_TOKEN rxi
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RXI
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_1 "txi"
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_1_STRING_UNQUOTED txi
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_1_STRING_TOKEN txi
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TXI
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_2 "tei"
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_2_STRING_UNQUOTED tei
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_2_STRING_TOKEN tei
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TEI
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_3 "eri"
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_3_STRING_UNQUOTED eri
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_3_STRING_TOKEN eri
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN ERI
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_4 "am"
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_4_STRING_UNQUOTED am
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_4_STRING_TOKEN am
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN AM
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 0) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 1) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 2) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 3) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 4)
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 4)
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sci_40070120, interrupt_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_LEN 5
#define DT_N_S_soc_S_sci_40070120_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_clocks_IDX_0_PH DT_N_S_soc_S_cgc_4001e000
#define DT_N_S_soc_S_sci_40070120_P_clocks_IDX_0_VAL_id 300941321
#define DT_N_S_soc_S_sci_40070120_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070120, clocks, 0)
#define DT_N_S_soc_S_sci_40070120_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120, clocks, 0)
#define DT_N_S_soc_S_sci_40070120_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_P_clocks_LEN 1
#define DT_N_S_soc_S_sci_40070120_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070120_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/sci@40070120/uart
 *
 * Node identifier: DT_N_S_soc_S_sci_40070120_S_uart
 *
 * Binding (compatible = renesas,ra-uart-sci):
 *   $ZEPHYR_BASE/dts/bindings/serial/renesas,ra-uart-sci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sci_40070120_S_uart_PATH "/soc/sci@40070120/uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sci_40070120_S_uart_FULL_NAME "uart"

/* Node parent (/soc/sci@40070120) identifier: */
#define DT_N_S_soc_S_sci_40070120_S_uart_PARENT DT_N_S_soc_S_sci_40070120

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sci_40070120_S_uart_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sci_40070120_S_uart_NODELABEL_NUM 0
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sci_40070120_S_uart_CHILD_NUM 0
#define DT_N_S_soc_S_sci_40070120_S_uart_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sci_40070120_S_uart_ORD 47
#define DT_N_S_soc_S_sci_40070120_S_uart_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sci_40070120_S_uart_REQUIRES_ORDS \
	46, /* /soc/sci@40070120 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sci_40070120_S_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sci_40070120_S_uart_EXISTS 1
#define DT_N_INST_3_renesas_ra_uart_sci DT_N_S_soc_S_sci_40070120_S_uart

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sci_40070120_S_uart_REG_NUM 0
#define DT_N_S_soc_S_sci_40070120_S_uart_RANGES_NUM 0
#define DT_N_S_soc_S_sci_40070120_S_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sci_40070120_S_uart_IRQ_NUM 0
#define DT_N_S_soc_S_sci_40070120_S_uart_IRQ_LEVEL 0
#define DT_N_S_soc_S_sci_40070120_S_uart_COMPAT_MATCHES_renesas_ra_uart_sci 1
#define DT_N_S_soc_S_sci_40070120_S_uart_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_COMPAT_VENDOR_IDX_0 "Renesas Electronics Corporation"
#define DT_N_S_soc_S_sci_40070120_S_uart_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_COMPAT_MODEL_IDX_0 "ra-uart-sci"
#define DT_N_S_soc_S_sci_40070120_S_uart_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sci_40070120_S_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sci_40070120_S_uart_P_wakeup_source 0
#define DT_N_S_soc_S_sci_40070120_S_uart_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sci_40070120_S_uart_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status "disabled"
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070120_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120_S_uart, status, 0)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120_S_uart, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_LEN 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_status_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible {"renesas,ra-uart-sci"}
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_IDX_0 "renesas,ra-uart-sci"
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_IDX_0_STRING_UNQUOTED renesas,ra-uart-sci
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_IDX_0_STRING_TOKEN renesas_ra_uart_sci
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_IDX_0_STRING_UPPER_TOKEN RENESAS_RA_UART_SCI
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sci_40070120_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sci_40070120_S_uart, compatible, 0)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sci_40070120_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sci_40070120_S_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sci_40070120_S_uart_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sci_40070120_S_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_sci_40070120_S_uart_P_hw_flow_control_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_console               DT_N_S_soc_S_sci_40070040_S_uart
#define DT_CHOSEN_zephyr_console_EXISTS        1
#define DT_CHOSEN_zephyr_shell_uart            DT_N_S_soc_S_sci_40070040_S_uart
#define DT_CHOSEN_zephyr_shell_uart_EXISTS     1
#define DT_CHOSEN_zephyr_sram                  DT_N_S_memory0_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS           1
#define DT_CHOSEN_zephyr_flash                 DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0
#define DT_CHOSEN_zephyr_flash_EXISTS          1
#define DT_CHOSEN_zephyr_code_partition        DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000
#define DT_CHOSEN_zephyr_code_partition_EXISTS 1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_interrupt_controller_40006000) fn(DT_N_S_soc_S_cgc_4001e000) fn(DT_N_S_soc_S_flash_controller_4001c000) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000) fn(DT_N_S_soc_S_gpio_40040000) fn(DT_N_S_soc_S_gpio_40040020) fn(DT_N_S_soc_S_gpio_40040040) fn(DT_N_S_soc_S_gpio_40040060) fn(DT_N_S_soc_S_gpio_40040080) fn(DT_N_S_soc_S_gpio_400400a0) fn(DT_N_S_soc_S_pinctrl_40040800) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1) fn(DT_N_S_soc_S_sci_40070000) fn(DT_N_S_soc_S_sci_40070000_S_uart) fn(DT_N_S_soc_S_sci_40070020) fn(DT_N_S_soc_S_sci_40070020_S_uart) fn(DT_N_S_soc_S_sci_40070120) fn(DT_N_S_soc_S_sci_40070120_S_uart) fn(DT_N_S_soc_S_gpio_400400c0) fn(DT_N_S_soc_S_gpio_400400e0) fn(DT_N_S_soc_S_gpio_40040100) fn(DT_N_S_soc_S_gpio_40040120) fn(DT_N_S_soc_S_sci_40070040) fn(DT_N_S_soc_S_sci_40070040_S_uart) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_mosc) fn(DT_N_S_clocks_S_sosc) fn(DT_N_S_clocks_S_hoco) fn(DT_N_S_clocks_S_moco) fn(DT_N_S_clocks_S_loco) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_memory0_20000000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_interrupt_controller_40006000) fn(DT_N_S_soc_S_cgc_4001e000) fn(DT_N_S_soc_S_flash_controller_4001c000) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000) fn(DT_N_S_soc_S_gpio_40040020) fn(DT_N_S_soc_S_pinctrl_40040800) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1) fn(DT_N_S_soc_S_sci_40070040) fn(DT_N_S_soc_S_sci_40070040_S_uart) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_hoco) fn(DT_N_S_clocks_S_moco) fn(DT_N_S_clocks_S_loco) fn(DT_N_S_memory0_20000000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led) fn(DT_N_S_connector)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040040, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040080, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400400a0, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070000_S_uart, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070020, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070020_S_uart, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070120, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070120_S_uart, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400400c0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400400e0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040100, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040120, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_mosc, __VA_ARGS__) fn(DT_N_S_clocks_S_sosc, __VA_ARGS__) fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) fn(DT_N_S_clocks_S_moco, __VA_ARGS__) fn(DT_N_S_clocks_S_loco, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_memory0_20000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40040800_S_sci2_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) fn(DT_N_S_clocks_S_moco, __VA_ARGS__) fn(DT_N_S_clocks_S_loco, __VA_ARGS__) fn(DT_N_S_memory0_20000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_bootloader DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_bootloader_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_code DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions_S_partition_4000
#define DT_COMPAT_fixed_partitions_LABEL_code_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_renesas_r7fa4m1ab3cfm 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_interrupt_controller_unit 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_clock_generation_circuit 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_gpio 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_pinctrl 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_sci 1
#define DT_COMPAT_HAS_OKAY_renesas_ra_uart_sci 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_renesas_r7fa4m1ab3cfm_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_renesas_ra_interrupt_controller_unit_NUM_OKAY 1
#define DT_N_INST_renesas_ra_clock_generation_circuit_NUM_OKAY 1
#define DT_N_INST_renesas_ra_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 2
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_renesas_ra_gpio_NUM_OKAY 1
#define DT_N_INST_renesas_ra_pinctrl_NUM_OKAY 1
#define DT_N_INST_renesas_ra_sci_NUM_OKAY 1
#define DT_N_INST_renesas_ra_uart_sci_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 3
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_FOREACH_OKAY_renesas_r7fa4m1ab3cfm(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_renesas_r7fa4m1ab3cfm(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_r7fa4m1ab3cfm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_r7fa4m1ab3cfm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_interrupt_controller_unit(fn) fn(DT_N_S_soc_S_interrupt_controller_40006000)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_interrupt_controller_unit(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40006000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_interrupt_controller_unit(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_interrupt_controller_unit(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_clock_generation_circuit(fn) fn(DT_N_S_soc_S_cgc_4001e000)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_clock_generation_circuit(fn, ...) fn(DT_N_S_soc_S_cgc_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_clock_generation_circuit(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_clock_generation_circuit(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_4001c000)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash1_40100000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001c000_S_flash0_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_gpio(fn) fn(DT_N_S_soc_S_gpio_40040020)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_40040020, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_pinctrl(fn) fn(DT_N_S_soc_S_pinctrl_40040800)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_pinctrl(fn, ...) fn(DT_N_S_soc_S_pinctrl_40040800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_sci(fn) fn(DT_N_S_soc_S_sci_40070040)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_sci(fn, ...) fn(DT_N_S_soc_S_sci_40070040, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_sci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_sci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_renesas_ra_uart_sci(fn) fn(DT_N_S_soc_S_sci_40070040_S_uart)
#define DT_FOREACH_OKAY_VARGS_renesas_ra_uart_sci(fn, ...) fn(DT_N_S_soc_S_sci_40070040_S_uart, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_renesas_ra_uart_sci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_renesas_ra_uart_sci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_hoco) fn(DT_N_S_clocks_S_moco) fn(DT_N_S_clocks_S_loco)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_hoco, __VA_ARGS__) fn(DT_N_S_clocks_S_moco, __VA_ARGS__) fn(DT_N_S_clocks_S_loco, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory0_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory0_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
